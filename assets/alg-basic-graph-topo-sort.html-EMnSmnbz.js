const e=JSON.parse('{"key":"v-03dcd98c","path":"/develop/algorithms-structures/alg-basic/alg-basic-graph-topo-sort.html","title":"图 - 拓扑排序(Topological sort)","lang":"zh-CN","frontmatter":{"date":"2019-06-28T00:00:00.000Z","category":["算法和数据结构"],"tag":["数据结构"],"description":"图 - 拓扑排序(Topological sort) 拓扑排序主要用来解决有向图中的依赖解析(dependency resolution)问题。 拓扑排序介绍 对于任何有向图而言，其拓扑排序为其所有结点的一个线性排序(对于同一个有向图而言可能存在多个这样的结点排序)。该排序满足这样的条件——对于图中的任意两个结点u和v，若存在一条有向边从u指向v，则在拓扑排序中u一定出现在v前面。 例如一个有向无环图如下: img","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-basic/alg-basic-graph-topo-sort.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"图 - 拓扑排序(Topological sort)"}],["meta",{"property":"og:description","content":"图 - 拓扑排序(Topological sort) 拓扑排序主要用来解决有向图中的依赖解析(dependency resolution)问题。 拓扑排序介绍 对于任何有向图而言，其拓扑排序为其所有结点的一个线性排序(对于同一个有向图而言可能存在多个这样的结点排序)。该排序满足这样的条件——对于图中的任意两个结点u和v，若存在一条有向边从u指向v，则在拓扑排序中u一定出现在v前面。 例如一个有向无环图如下: img"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2019-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图 - 拓扑排序(Topological sort)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"拓扑排序介绍","slug":"拓扑排序介绍","link":"#拓扑排序介绍","children":[]},{"level":2,"title":"拓扑排序前提","slug":"拓扑排序前提","link":"#拓扑排序前提","children":[]},{"level":2,"title":"拓扑排序算法","slug":"拓扑排序算法","link":"#拓扑排序算法","children":[]},{"level":2,"title":"拓扑排序代码实现","slug":"拓扑排序代码实现","link":"#拓扑排序代码实现","children":[]},{"level":2,"title":"复杂度","slug":"复杂度","link":"#复杂度","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":4.07,"words":1222},"filePathRelative":"develop/algorithms-structures/alg-basic/alg-basic-graph-topo-sort.md","localizedDate":"2019年6月28日","excerpt":"<h1> 图 - 拓扑排序(Topological sort)</h1>\\n<blockquote>\\n<p>拓扑排序主要用来解决有向图中的依赖解析(dependency resolution)问题。</p>\\n</blockquote>\\n<h2> 拓扑排序介绍</h2>\\n<p>对于任何有向图而言，其拓扑排序为其所有结点的一个线性排序(对于同一个有向图而言可能存在多个这样的结点排序)。该排序满足这样的条件——对于图中的任意两个结点u和v，若存在一条有向边从u指向v，则在拓扑排序中u一定出现在v前面。</p>\\n<p>例如一个有向无环图如下:</p>\\n<figure><img src=\\"https://www.pdai.tech/images/alg/alg-graph-topo-sort-1.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
