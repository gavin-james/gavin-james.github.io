const e=JSON.parse('{"key":"v-ec5223b4","path":"/develop/spec/dev-th-solid.html","title":"软件开发中的原则 - SOLID","lang":"zh-CN","frontmatter":{"date":"2019-05-06T00:00:00.000Z","category":["开发理论"],"tag":["开发理论"],"description":"软件开发中的原则 - SOLID 在软件开发中，前人对软件系统的设计和开发总结了一些原则和模式， 不管用什么语言做开发，都将对我们系统设计和开发提供指导意义。本文主要将总结这些常见的原则，和具体阐述意义。 开发原则SOILD 面向对象的基本原则(solid)是五个，但是在经常被提到的除了这五个之外还有 迪米特法则和合成复用原则等， 所以在常见的文章中有表示写六大或七大原则的； 除此之外我还将给出一些其它相关书籍和互联网上出现的原则；","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/spec/dev-th-solid.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"软件开发中的原则 - SOLID"}],["meta",{"property":"og:description","content":"软件开发中的原则 - SOLID 在软件开发中，前人对软件系统的设计和开发总结了一些原则和模式， 不管用什么语言做开发，都将对我们系统设计和开发提供指导意义。本文主要将总结这些常见的原则，和具体阐述意义。 开发原则SOILD 面向对象的基本原则(solid)是五个，但是在经常被提到的除了这五个之外还有 迪米特法则和合成复用原则等， 所以在常见的文章中有表示写六大或七大原则的； 除此之外我还将给出一些其它相关书籍和互联网上出现的原则；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"开发理论"}],["meta",{"property":"article:published_time","content":"2019-05-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"软件开发中的原则 - SOLID\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"开发原则SOILD","slug":"开发原则soild","link":"#开发原则soild","children":[{"level":3,"title":"S单一职责SRP","slug":"s单一职责srp","link":"#s单一职责srp","children":[]},{"level":3,"title":"O开放封闭原则OCP","slug":"o开放封闭原则ocp","link":"#o开放封闭原则ocp","children":[]},{"level":3,"title":"L里氏替换原则LSP","slug":"l里氏替换原则lsp","link":"#l里氏替换原则lsp","children":[]},{"level":3,"title":"I接口隔离法则","slug":"i接口隔离法则","link":"#i接口隔离法则","children":[]},{"level":3,"title":"D依赖倒置原则DIP","slug":"d依赖倒置原则dip","link":"#d依赖倒置原则dip","children":[]}]},{"level":2,"title":"其它原则","slug":"其它原则","link":"#其它原则","children":[{"level":3,"title":"合成/聚合复用原则","slug":"合成-聚合复用原则","link":"#合成-聚合复用原则","children":[]},{"level":3,"title":"迪米特法则","slug":"迪米特法则","link":"#迪米特法则","children":[]}]},{"level":2,"title":"Q&A","slug":"q-a","link":"#q-a","children":[{"level":3,"title":"面向对象设计其他原则","slug":"面向对象设计其他原则","link":"#面向对象设计其他原则","children":[]},{"level":3,"title":"你能解释一下里氏替换原则吗?","slug":"你能解释一下里氏替换原则吗","link":"#你能解释一下里氏替换原则吗","children":[]},{"level":3,"title":"什么情况下会违反迪米特法则? 为什么会有这个问题?","slug":"什么情况下会违反迪米特法则-为什么会有这个问题","link":"#什么情况下会违反迪米特法则-为什么会有这个问题","children":[]},{"level":3,"title":"给我一个符合开闭原则的设计模式的例子?","slug":"给我一个符合开闭原则的设计模式的例子","link":"#给我一个符合开闭原则的设计模式的例子","children":[]},{"level":3,"title":"什么时候使用享元模式(蝇量模式)?","slug":"什么时候使用享元模式-蝇量模式","link":"#什么时候使用享元模式-蝇量模式","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":20.07,"words":6021},"filePathRelative":"develop/spec/dev-th-solid.md","localizedDate":"2019年5月6日","excerpt":"<h1> 软件开发中的原则 - SOLID</h1>\\n<blockquote>\\n<p>在软件开发中，前人对软件系统的设计和开发总结了一些原则和模式， 不管用什么语言做开发，都将对我们系统设计和开发提供指导意义。本文主要将总结这些常见的原则，和具体阐述意义。</p>\\n</blockquote>\\n<h2> 开发原则SOILD</h2>\\n<blockquote>\\n<p>面向对象的基本原则(solid)是五个，但是在经常被提到的除了这五个之外还有 <code>迪米特法则</code>和<code>合成复用原则</code>等， 所以在常见的文章中有表示写六大或七大原则的； 除此之外我还将给出一些其它相关书籍和互联网上出现的原则；</p>\\n</blockquote>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
