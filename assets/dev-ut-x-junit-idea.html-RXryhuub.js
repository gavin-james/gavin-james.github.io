const n=JSON.parse('{"key":"v-c9c030e6","path":"/develop/quality-assurance/ut/dev-ut-x-junit-idea.html","title":"单元测试 - IDEA下单元测试详解","lang":"zh-CN","frontmatter":{"date":"2019-03-24T00:00:00.000Z","category":["质量保障"],"tag":["代码质量"],"description":"单元测试 - IDEA下单元测试详解 工欲善其事必先利其器，我们在写单元测试一定要使用工具，这将能大幅度提升编码的效率。本文以IDEA为例，看看如何利用插件提升效率。 场景准备 准备一个待测试的类, 其中还包含着错误。 package tech.pdai.junit4.module; public class Calculator { public int result = 0; /** * add. * * @param operand1 first param * @param operand2 second param * @return sum */ public int add(int operand1, int operand2) { result = operand1 + operand2; return result; } public int subtract(int operand1, int operand2) { result = operand1 - operand2; return result; } public int multiple(int operand1, int operand2) { result = operand1 * operand2; for (; ; ) { //死循环 } } public int divide(int operand1, int operand2) { result = operand1 / 0; return result; } public int getResult() { return this.result; } }","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/quality-assurance/ut/dev-ut-x-junit-idea.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"单元测试 - IDEA下单元测试详解"}],["meta",{"property":"og:description","content":"单元测试 - IDEA下单元测试详解 工欲善其事必先利其器，我们在写单元测试一定要使用工具，这将能大幅度提升编码的效率。本文以IDEA为例，看看如何利用插件提升效率。 场景准备 准备一个待测试的类, 其中还包含着错误。 package tech.pdai.junit4.module; public class Calculator { public int result = 0; /** * add. * * @param operand1 first param * @param operand2 second param * @return sum */ public int add(int operand1, int operand2) { result = operand1 + operand2; return result; } public int subtract(int operand1, int operand2) { result = operand1 - operand2; return result; } public int multiple(int operand1, int operand2) { result = operand1 * operand2; for (; ; ) { //死循环 } } public int divide(int operand1, int operand2) { result = operand1 / 0; return result; } public int getResult() { return this.result; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T09:56:01.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"代码质量"}],["meta",{"property":"article:published_time","content":"2019-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T09:56:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单元测试 - IDEA下单元测试详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T09:56:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"场景准备","slug":"场景准备","link":"#场景准备","children":[]},{"level":2,"title":"插件使用","slug":"插件使用","link":"#插件使用","children":[{"level":3,"title":"自动生成单元测试","slug":"自动生成单元测试","link":"#自动生成单元测试","children":[]},{"level":3,"title":"并行测试","slug":"并行测试","link":"#并行测试","children":[]},{"level":3,"title":"代码覆盖率","slug":"代码覆盖率","link":"#代码覆盖率","children":[]},{"level":3,"title":"Profile","slug":"profile","link":"#profile","children":[]}]}],"git":{"createdTime":1703584561000,"updatedTime":1703584561000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":1.7,"words":511},"filePathRelative":"develop/quality-assurance/ut/dev-ut-x-junit-idea.md","localizedDate":"2019年3月24日","excerpt":"<h1> 单元测试 - IDEA下单元测试详解</h1>\\n<blockquote>\\n<p>工欲善其事必先利其器，我们在写单元测试一定要使用工具，这将能大幅度提升编码的效率。本文以IDEA为例，看看如何利用插件提升效率。</p>\\n</blockquote>\\n<h2> 场景准备</h2>\\n<p>准备一个待测试的类, 其中还包含着错误。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">tech<span class=\\"token punctuation\\">.</span>pdai<span class=\\"token punctuation\\">.</span>junit4<span class=\\"token punctuation\\">.</span>module</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Calculator</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> result <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * add.\\n     *\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">operand1</span> first param\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">operand2</span> second param\\n     * <span class=\\"token keyword\\">@return</span> sum\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> operand1<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> operand2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        result <span class=\\"token operator\\">=</span> operand1 <span class=\\"token operator\\">+</span> operand2<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> result<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">subtract</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> operand1<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> operand2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        result <span class=\\"token operator\\">=</span> operand1 <span class=\\"token operator\\">-</span> operand2<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> result<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">multiple</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> operand1<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> operand2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        result <span class=\\"token operator\\">=</span> operand1 <span class=\\"token operator\\">*</span> operand2<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>                    <span class=\\"token comment\\">//死循环</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">divide</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> operand1<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> operand2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        result <span class=\\"token operator\\">=</span> operand1 <span class=\\"token operator\\">/</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> result<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">getResult</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>result<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{n as data};
