const e=JSON.parse('{"key":"v-6dbf2df1","path":"/java/thread/java-thread-x-key-volatile.html","title":"关键字: volatile详解","lang":"zh-CN","frontmatter":{"date":"2022-02-25T00:00:00.000Z","category":["Java 多线程"],"tag":["Java 多线程"],"description":"关键字: volatile详解 相比Sychronized(重量级锁，对系统性能影响较大)，volatile提供了另一种解决可见性和有序性问题的方案。 带着BAT大厂的面试问题去理解volatile 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解volatile。 volatile关键字的作用是什么? volatile能保证原子性吗? 之前32位机器上共享的long和double变量的为什么要用volatile? 现在64位机器上是否也要设置呢? i++为什么不能保证原子性? volatile是如何实现可见性的? 内存屏障。 volatile是如何实现有序性的? happens-before等 说下volatile的应用场景?","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/java/thread/java-thread-x-key-volatile.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"关键字: volatile详解"}],["meta",{"property":"og:description","content":"关键字: volatile详解 相比Sychronized(重量级锁，对系统性能影响较大)，volatile提供了另一种解决可见性和有序性问题的方案。 带着BAT大厂的面试问题去理解volatile 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解volatile。 volatile关键字的作用是什么? volatile能保证原子性吗? 之前32位机器上共享的long和double变量的为什么要用volatile? 现在64位机器上是否也要设置呢? i++为什么不能保证原子性? volatile是如何实现可见性的? 内存屏障。 volatile是如何实现有序性的? happens-before等 说下volatile的应用场景?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T08:42:25.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"Java 多线程"}],["meta",{"property":"article:published_time","content":"2022-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T08:42:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关键字: volatile详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T08:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"带着BAT大厂的面试问题去理解volatile","slug":"带着bat大厂的面试问题去理解volatile","link":"#带着bat大厂的面试问题去理解volatile","children":[]},{"level":2,"title":"volatile的作用详解","slug":"volatile的作用详解","link":"#volatile的作用详解","children":[{"level":3,"title":"防重排序","slug":"防重排序","link":"#防重排序","children":[]},{"level":3,"title":"实现可见性","slug":"实现可见性","link":"#实现可见性","children":[]},{"level":3,"title":"保证原子性:单次读/写","slug":"保证原子性-单次读-写","link":"#保证原子性-单次读-写","children":[]}]},{"level":2,"title":"volatile 的实现原理","slug":"volatile-的实现原理","link":"#volatile-的实现原理","children":[{"level":3,"title":"volatile 可见性实现","slug":"volatile-可见性实现","link":"#volatile-可见性实现","children":[]},{"level":3,"title":"volatile 有序性实现","slug":"volatile-有序性实现","link":"#volatile-有序性实现","children":[]}]},{"level":2,"title":"volatile 的应用场景","slug":"volatile-的应用场景","link":"#volatile-的应用场景","children":[{"level":3,"title":"模式1：状态标志","slug":"模式1-状态标志","link":"#模式1-状态标志","children":[]},{"level":3,"title":"模式2：一次性安全发布(one-time safe publication)","slug":"模式2-一次性安全发布-one-time-safe-publication","link":"#模式2-一次性安全发布-one-time-safe-publication","children":[]},{"level":3,"title":"模式3：独立观察(independent observation)","slug":"模式3-独立观察-independent-observation","link":"#模式3-独立观察-independent-observation","children":[]},{"level":3,"title":"模式4：volatile bean 模式","slug":"模式4-volatile-bean-模式","link":"#模式4-volatile-bean-模式","children":[]},{"level":3,"title":"模式5：开销较低的读－写锁策略","slug":"模式5-开销较低的读-写锁策略","link":"#模式5-开销较低的读-写锁策略","children":[]},{"level":3,"title":"模式6：双重检查(double-checked)","slug":"模式6-双重检查-double-checked","link":"#模式6-双重检查-double-checked","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1687917370000,"updatedTime":1703493745000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":15.56,"words":4669},"filePathRelative":"java/thread/java-thread-x-key-volatile.md","localizedDate":"2022年2月25日","excerpt":"<h1> 关键字: volatile详解</h1>\\n<blockquote>\\n<p>相比Sychronized(重量级锁，对系统性能影响较大)，volatile提供了另一种解决可见性和有序性问题的方案。</p>\\n</blockquote>\\n<h2> 带着BAT大厂的面试问题去理解volatile</h2>\\n<blockquote>\\n<p>提示</p>\\n<p>请带着这些问题继续后文，会很大程度上帮助你更好的理解volatile。</p>\\n</blockquote>\\n<ul>\\n<li>volatile关键字的作用是什么?</li>\\n<li>volatile能保证原子性吗?</li>\\n<li>之前32位机器上共享的long和double变量的为什么要用volatile? 现在64位机器上是否也要设置呢?</li>\\n<li>i++为什么不能保证原子性?</li>\\n<li>volatile是如何实现可见性的? 内存屏障。</li>\\n<li>volatile是如何实现有序性的? happens-before等</li>\\n<li>说下volatile的应用场景?</li>\\n</ul>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
