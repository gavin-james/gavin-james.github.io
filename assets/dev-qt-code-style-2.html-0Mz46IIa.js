const e=JSON.parse('{"key":"v-5a4ad2b4","path":"/develop/quality-assurance/ut/dev-qt-code-style-2.html","title":"统一命名规范详解","lang":"zh-CN","frontmatter":{"date":"2019-03-27T00:00:00.000Z","category":["质量保障"],"tag":["代码质量"],"description":"统一命名规范详解 好的代码本身就是注释, 所以我们需要统一命名风格，本文将介绍常用的统一风格的措施之统一命名规范。 统一命名风格 好的代码本身就是注释, 所以我们需要统一命名风格。 在本文中，将从大到小，从外到内，总结Java编程中的命名规范。文中将会涉及到日常工作中常见的命名示例，如包命名，类命名，接口命名，方法命名，变量命名，常类命名，抽象类命名，异常类命名以及扩展类命名等。我将按照项目工程目录结构，从包，类(接口，抽象类，异常类)，方法，变量和常量的顺序展开介绍。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/quality-assurance/ut/dev-qt-code-style-2.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"统一命名规范详解"}],["meta",{"property":"og:description","content":"统一命名规范详解 好的代码本身就是注释, 所以我们需要统一命名风格，本文将介绍常用的统一风格的措施之统一命名规范。 统一命名风格 好的代码本身就是注释, 所以我们需要统一命名风格。 在本文中，将从大到小，从外到内，总结Java编程中的命名规范。文中将会涉及到日常工作中常见的命名示例，如包命名，类命名，接口命名，方法命名，变量命名，常类命名，抽象类命名，异常类命名以及扩展类命名等。我将按照项目工程目录结构，从包，类(接口，抽象类，异常类)，方法，变量和常量的顺序展开介绍。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"代码质量"}],["meta",{"property":"article:published_time","content":"2019-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"统一命名规范详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"统一命名风格","slug":"统一命名风格","link":"#统一命名风格","children":[{"level":3,"title":"包命名规范","slug":"包命名规范","link":"#包命名规范","children":[]},{"level":3,"title":"类命名规范","slug":"类命名规范","link":"#类命名规范","children":[]},{"level":3,"title":"接口命名规范","slug":"接口命名规范","link":"#接口命名规范","children":[]},{"level":3,"title":"抽象类命名规范","slug":"抽象类命名规范","link":"#抽象类命名规范","children":[]},{"level":3,"title":"异常类命名规范","slug":"异常类命名规范","link":"#异常类命名规范","children":[]},{"level":3,"title":"方法命名规范","slug":"方法命名规范","link":"#方法命名规范","children":[]},{"level":3,"title":"变量命名规范","slug":"变量命名规范","link":"#变量命名规范","children":[]},{"level":3,"title":"常量命名规范","slug":"常量命名规范","link":"#常量命名规范","children":[]},{"level":3,"title":"枚举命名规范","slug":"枚举命名规范","link":"#枚举命名规范","children":[]},{"level":3,"title":"其他命名规范","slug":"其他命名规范","link":"#其他命名规范","children":[]}]},{"level":2,"title":"阿里代码手册中命名规范","slug":"阿里代码手册中命名规范","link":"#阿里代码手册中命名规范","children":[{"level":3,"title":"常量定义","slug":"常量定义","link":"#常量定义","children":[]},{"level":3,"title":"代码格式","slug":"代码格式","link":"#代码格式","children":[]}]},{"level":2,"title":"扩展：速记Java开发中的各种O","slug":"扩展-速记java开发中的各种o","link":"#扩展-速记java开发中的各种o","children":[]}],"git":{"createdTime":1703584561000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":19.09,"words":5728},"filePathRelative":"develop/quality-assurance/ut/dev-qt-code-style-2.md","localizedDate":"2019年3月27日","excerpt":"<h1> 统一命名规范详解</h1>\\n<blockquote>\\n<p>好的代码本身就是注释, 所以我们需要统一命名风格，本文将介绍常用的统一风格的措施之<strong>统一命名规范</strong>。</p>\\n</blockquote>\\n<h2> 统一命名风格</h2>\\n<blockquote>\\n<p>好的代码本身就是注释, 所以我们需要统一命名风格。</p>\\n</blockquote>\\n<p>在本文中，将从大到小，从外到内，总结Java编程中的命名规范。文中将会涉及到日常工作中常见的命名示例，如包命名，类命名，接口命名，方法命名，变量命名，常类命名，抽象类命名，异常类命名以及扩展类命名等。我将按照项目工程目录结构，从包，类(接口，抽象类，异常类)，方法，变量和常量的顺序展开介绍。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
