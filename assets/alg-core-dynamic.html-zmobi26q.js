const e=JSON.parse('{"key":"v-37a513a9","path":"/develop/algorithms-structures/alg-core/alg-core-dynamic.html","title":"算法思想 - 动态规划算法","lang":"zh-CN","frontmatter":{"date":"2019-07-12T00:00:00.000Z","category":["算法和数据结构"],"tag":["算法思想"],"description":"算法思想 - 动态规划算法 动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解。每一个解都对应于一个值，我们希望找到具有最优值的解。动态规划算法与分治法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。动态规划算法在算法思想中是极为重要的，需要重点掌握。 动态规划相关题目 递归和动态规划都是将原问题拆成多个子问题然后求解，他们之间最本质的区别是，动态规划保存了子问题的解，避免重复计算。 斐波那契数列","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-core/alg-core-dynamic.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"算法思想 - 动态规划算法"}],["meta",{"property":"og:description","content":"算法思想 - 动态规划算法 动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解。每一个解都对应于一个值，我们希望找到具有最优值的解。动态规划算法与分治法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。动态规划算法在算法思想中是极为重要的，需要重点掌握。 动态规划相关题目 递归和动态规划都是将原问题拆成多个子问题然后求解，他们之间最本质的区别是，动态规划保存了子问题的解，避免重复计算。 斐波那契数列"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"算法思想"}],["meta",{"property":"article:published_time","content":"2019-07-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法思想 - 动态规划算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"动态规划相关题目","slug":"动态规划相关题目","link":"#动态规划相关题目","children":[{"level":3,"title":"斐波那契数列","slug":"斐波那契数列","link":"#斐波那契数列","children":[]},{"level":3,"title":"矩阵路径","slug":"矩阵路径","link":"#矩阵路径","children":[]},{"level":3,"title":"数组区间","slug":"数组区间","link":"#数组区间","children":[]},{"level":3,"title":"分割整数","slug":"分割整数","link":"#分割整数","children":[]},{"level":3,"title":"最长递增子序列","slug":"最长递增子序列","link":"#最长递增子序列","children":[]},{"level":3,"title":"最长公共子序列","slug":"最长公共子序列","link":"#最长公共子序列","children":[]},{"level":3,"title":"0-1 背包","slug":"_0-1-背包","link":"#_0-1-背包","children":[]},{"level":3,"title":"股票交易","slug":"股票交易","link":"#股票交易","children":[]},{"level":3,"title":"字符串编辑","slug":"字符串编辑","link":"#字符串编辑","children":[]}]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":24.28,"words":7285},"filePathRelative":"develop/algorithms-structures/alg-core/alg-core-dynamic.md","localizedDate":"2019年7月12日","excerpt":"<h1> 算法思想 - 动态规划算法</h1>\\n<blockquote>\\n<p>动态规划算法通常用于求解具有某种最优性质的问题。在这类问题中，可能会有许多可行解。每一个解都对应于一个值，我们希望找到具有最优值的解。动态规划算法与分治法类似，其基本思想也是将待求解问题分解成若干个子问题，先求解子问题，然后从这些子问题的解得到原问题的解。动态规划算法在算法思想中是极为重要的，需要重点掌握。</p>\\n</blockquote>\\n<h2> 动态规划相关题目</h2>\\n<p>递归和动态规划都是将原问题拆成多个子问题然后求解，他们之间最本质的区别是，动态规划保存了子问题的解，避免重复计算。</p>\\n<h3> 斐波那契数列</h3>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
