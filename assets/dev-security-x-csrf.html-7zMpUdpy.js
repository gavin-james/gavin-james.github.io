const e=JSON.parse('{"key":"v-2a4571a2","path":"/develop/security/dev-security-x-csrf.html","title":"开发安全 - CSRF 详解","lang":"zh-CN","frontmatter":{"date":"2019-04-15T00:00:00.000Z","category":["开发理论"],"tag":["安全相关"],"description":"开发安全 - CSRF 详解 CSRF(Cross-site request forgery跨站请求伪造，也被称成为“one click attack”或者session riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。 CSRF 简介 CSRF（Cross Site Request Forgery, 跨站域请求伪造）是一种网络的攻击方式，它在 2007 年曾被列为互联网 20 大安全隐患之一。其他安全隐患，比如 SQL 脚本注入，跨站域脚本攻击等在近年来已经逐渐为众人熟知，很多网站也都针对他们进行了防御。然而，对于大多数人来说，CSRF 却依然是一个陌生的概念。即便是大名鼎鼎的 Gmail, 在 2007 年底也存在着 CSRF 漏洞，从而被黑客攻击而使 Gmail 的用户造成巨大的损失。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/security/dev-security-x-csrf.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"开发安全 - CSRF 详解"}],["meta",{"property":"og:description","content":"开发安全 - CSRF 详解 CSRF(Cross-site request forgery跨站请求伪造，也被称成为“one click attack”或者session riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。 CSRF 简介 CSRF（Cross Site Request Forgery, 跨站域请求伪造）是一种网络的攻击方式，它在 2007 年曾被列为互联网 20 大安全隐患之一。其他安全隐患，比如 SQL 脚本注入，跨站域脚本攻击等在近年来已经逐渐为众人熟知，很多网站也都针对他们进行了防御。然而，对于大多数人来说，CSRF 却依然是一个陌生的概念。即便是大名鼎鼎的 Gmail, 在 2007 年底也存在着 CSRF 漏洞，从而被黑客攻击而使 Gmail 的用户造成巨大的损失。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T09:56:01.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"安全相关"}],["meta",{"property":"article:published_time","content":"2019-04-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T09:56:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发安全 - CSRF 详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-04-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T09:56:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"CSRF 简介","slug":"csrf-简介","link":"#csrf-简介","children":[]},{"level":2,"title":"CSRF 如何攻击","slug":"csrf-如何攻击","link":"#csrf-如何攻击","children":[]},{"level":2,"title":"CSRF 理解的注意点","slug":"csrf-理解的注意点","link":"#csrf-理解的注意点","children":[{"level":3,"title":"黑客能拿到Cookie吗?","slug":"黑客能拿到cookie吗","link":"#黑客能拿到cookie吗","children":[]},{"level":3,"title":"什么样的请求是要CSRF保护的?","slug":"什么样的请求是要csrf保护的","link":"#什么样的请求是要csrf保护的","children":[]},{"level":3,"title":"为什么对请求做了CSRF拦截，但还是会报CRSF漏洞?","slug":"为什么对请求做了csrf拦截-但还是会报crsf漏洞","link":"#为什么对请求做了csrf拦截-但还是会报crsf漏洞","children":[]}]},{"level":2,"title":"CSRF 防御常规思路","slug":"csrf-防御常规思路","link":"#csrf-防御常规思路","children":[{"level":3,"title":"验证 HTTP Referer 字段","slug":"验证-http-referer-字段","link":"#验证-http-referer-字段","children":[]},{"level":3,"title":"在请求地址中添加 token 并验证","slug":"在请求地址中添加-token-并验证","link":"#在请求地址中添加-token-并验证","children":[]},{"level":3,"title":"在 HTTP 头中自定义属性并验证","slug":"在-http-头中自定义属性并验证","link":"#在-http-头中自定义属性并验证","children":[]}]},{"level":2,"title":"CSRF 防御实战","slug":"csrf-防御实战","link":"#csrf-防御实战","children":[{"level":3,"title":"非框架型 - 自定义XXXCsrfFilter","slug":"非框架型-自定义xxxcsrffilter","link":"#非框架型-自定义xxxcsrffilter","children":[]},{"level":3,"title":"Spring Security - 什么时候禁用CSRF","slug":"spring-security-什么时候禁用csrf","link":"#spring-security-什么时候禁用csrf","children":[]},{"level":3,"title":"Spring Security - CookieCsrfTokenRepository.withHttpOnlyFalse()","slug":"spring-security-cookiecsrftokenrepository-withhttponlyfalse","link":"#spring-security-cookiecsrftokenrepository-withhttponlyfalse","children":[]},{"level":3,"title":"Spring Security - new CookieCsrfTokenRepository()","slug":"spring-security-new-cookiecsrftokenrepository","link":"#spring-security-new-cookiecsrftokenrepository","children":[]},{"level":3,"title":"Spring Security - CookieCsrfTokenRepository如何工作的呢?","slug":"spring-security-cookiecsrftokenrepository如何工作的呢","link":"#spring-security-cookiecsrftokenrepository如何工作的呢","children":[]},{"level":3,"title":"Spring Security - CsrfFilter是如何完成拦截和校验的呢?","slug":"spring-security-csrffilter是如何完成拦截和校验的呢","link":"#spring-security-csrffilter是如何完成拦截和校验的呢","children":[]},{"level":3,"title":"Spring Security - 默认对哪些Method拦截呢?","slug":"spring-security-默认对哪些method拦截呢","link":"#spring-security-默认对哪些method拦截呢","children":[]},{"level":3,"title":"Spring Security - HttpSessionCsrfTokenRepository","slug":"spring-security-httpsessioncsrftokenrepository","link":"#spring-security-httpsessioncsrftokenrepository","children":[]},{"level":3,"title":"Spring Security - 设置Csrf不对会造成哪些错误呢?","slug":"spring-security-设置csrf不对会造成哪些错误呢","link":"#spring-security-设置csrf不对会造成哪些错误呢","children":[]}]},{"level":2,"title":"总结与展望","slug":"总结与展望","link":"#总结与展望","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703584561000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":15.56,"words":4668},"filePathRelative":"develop/security/dev-security-x-csrf.md","localizedDate":"2019年4月15日","excerpt":"<h1> 开发安全 - CSRF 详解</h1>\\n<blockquote>\\n<p>CSRF(Cross-site request forgery跨站请求伪造，也被称成为“one click attack”或者session riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。</p>\\n</blockquote>\\n<h2> CSRF 简介</h2>\\n<p>CSRF（Cross Site Request Forgery, 跨站域请求伪造）是一种网络的攻击方式，它在 2007 年曾被列为互联网 20 大安全隐患之一。其他安全隐患，比如 SQL 脚本注入，跨站域脚本攻击等在近年来已经逐渐为众人熟知，很多网站也都针对他们进行了防御。然而，对于大多数人来说，CSRF 却依然是一个陌生的概念。即便是大名鼎鼎的 Gmail, 在 2007 年底也存在着 CSRF 漏洞，从而被黑客攻击而使 Gmail 的用户造成巨大的损失。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
