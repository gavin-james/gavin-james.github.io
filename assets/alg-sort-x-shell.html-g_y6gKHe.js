const e=JSON.parse('{"key":"v-c5e41c26","path":"/develop/algorithms-structures/alg-sort/alg-sort-x-shell.html","title":"排序 - Shell排序(Shell Sort)","lang":"zh-CN","frontmatter":{"date":"2019-07-04T00:00:00.000Z","category":["算法和数据结构"],"tag":["排序算法"],"description":"排序 - Shell排序(Shell Sort) 希尔排序(Shell Sort)是插入排序的一种，它是针对直接插入排序算法的改进。 希尔排序介绍 希尔排序实质上是一种分组插入方法。它的基本思想是: 对于n个待排序的数列，取一个小于n的整数gap(gap被称为步长)将待排序元素分成若干个组子序列，所有距离为gap的倍数的记录放在同一个组中；然后，对各组内的元素进行直接插入排序。 这一趟排序完成之后，每一个组的元素都是有序的。然后减小gap的值，并重复执行上述的分组和排序。重复这样的操作，当gap=1时，整个数列就是有序的。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-sort/alg-sort-x-shell.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"排序 - Shell排序(Shell Sort)"}],["meta",{"property":"og:description","content":"排序 - Shell排序(Shell Sort) 希尔排序(Shell Sort)是插入排序的一种，它是针对直接插入排序算法的改进。 希尔排序介绍 希尔排序实质上是一种分组插入方法。它的基本思想是: 对于n个待排序的数列，取一个小于n的整数gap(gap被称为步长)将待排序元素分成若干个组子序列，所有距离为gap的倍数的记录放在同一个组中；然后，对各组内的元素进行直接插入排序。 这一趟排序完成之后，每一个组的元素都是有序的。然后减小gap的值，并重复执行上述的分组和排序。重复这样的操作，当gap=1时，整个数列就是有序的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2019-07-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"排序 - Shell排序(Shell Sort)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-04T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"希尔排序介绍","slug":"希尔排序介绍","link":"#希尔排序介绍","children":[]},{"level":2,"title":"希尔排序实现","slug":"希尔排序实现","link":"#希尔排序实现","children":[]},{"level":2,"title":"希尔排序的时间复杂度和稳定性","slug":"希尔排序的时间复杂度和稳定性","link":"#希尔排序的时间复杂度和稳定性","children":[{"level":3,"title":"希尔排序时间复杂度","slug":"希尔排序时间复杂度","link":"#希尔排序时间复杂度","children":[]},{"level":3,"title":"希尔排序稳定性","slug":"希尔排序稳定性","link":"#希尔排序稳定性","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":4.5,"words":1349},"filePathRelative":"develop/algorithms-structures/alg-sort/alg-sort-x-shell.md","localizedDate":"2019年7月4日","excerpt":"<h1> 排序 - Shell排序(Shell Sort)</h1>\\n<blockquote>\\n<p>希尔排序(Shell Sort)是插入排序的一种，它是针对直接插入排序算法的改进。</p>\\n</blockquote>\\n<h2> 希尔排序介绍</h2>\\n<p>希尔排序实质上是一种分组插入方法。它的基本思想是: 对于n个待排序的数列，取一个小于n的整数gap(gap被称为步长)将待排序元素分成若干个组子序列，所有距离为gap的倍数的记录放在同一个组中；然后，对各组内的元素进行直接插入排序。 这一趟排序完成之后，每一个组的元素都是有序的。然后减小gap的值，并重复执行上述的分组和排序。重复这样的操作，当gap=1时，整个数列就是有序的。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
