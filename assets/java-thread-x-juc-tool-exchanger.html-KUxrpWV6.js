const e=JSON.parse('{"key":"v-5bebca2c","path":"/java/thread/java-thread-x-juc-tool-exchanger.html","title":"JUC工具类: Exchanger详解","lang":"zh-CN","frontmatter":{"date":"2022-03-17T00:00:00.000Z","category":["Java 多线程"],"tag":["Java 多线程"],"description":"JUC工具类: Exchanger详解 Exchanger是用于线程协作的工具类, 主要用于两个线程之间的数据交换。 带着BAT大厂的面试问题去理解Exchanger 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解Exchanger。 Exchanger主要解决什么问题? 对比SynchronousQueue，为什么说Exchanger可被视为 SynchronousQueue 的双向形式? Exchanger在不同的JDK版本中实现有什么差别? Exchanger实现机制? Exchanger已经有了slot单节点，为什么会加入arena node数组? 什么时候会用到数组? arena可以确保不同的slot在arena中是不会相冲突的，那么是怎么保证的呢? 什么是伪共享，Exchanger中如何体现的? Exchanger实现举例","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/java/thread/java-thread-x-juc-tool-exchanger.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"JUC工具类: Exchanger详解"}],["meta",{"property":"og:description","content":"JUC工具类: Exchanger详解 Exchanger是用于线程协作的工具类, 主要用于两个线程之间的数据交换。 带着BAT大厂的面试问题去理解Exchanger 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解Exchanger。 Exchanger主要解决什么问题? 对比SynchronousQueue，为什么说Exchanger可被视为 SynchronousQueue 的双向形式? Exchanger在不同的JDK版本中实现有什么差别? Exchanger实现机制? Exchanger已经有了slot单节点，为什么会加入arena node数组? 什么时候会用到数组? arena可以确保不同的slot在arena中是不会相冲突的，那么是怎么保证的呢? 什么是伪共享，Exchanger中如何体现的? Exchanger实现举例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T08:42:25.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"Java 多线程"}],["meta",{"property":"article:published_time","content":"2022-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T08:42:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JUC工具类: Exchanger详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T08:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"带着BAT大厂的面试问题去理解Exchanger","slug":"带着bat大厂的面试问题去理解exchanger","link":"#带着bat大厂的面试问题去理解exchanger","children":[]},{"level":2,"title":"Exchanger简介","slug":"exchanger简介","link":"#exchanger简介","children":[]},{"level":2,"title":"Exchanger实现机制","slug":"exchanger实现机制","link":"#exchanger实现机制","children":[]},{"level":2,"title":"Exchanger源码解析","slug":"exchanger源码解析","link":"#exchanger源码解析","children":[{"level":3,"title":"内部类 - Participant","slug":"内部类-participant","link":"#内部类-participant","children":[]},{"level":3,"title":"内部类 - Node","slug":"内部类-node","link":"#内部类-node","children":[]},{"level":3,"title":"核心属性","slug":"核心属性","link":"#核心属性","children":[]},{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"核心方法 - exchange(V x)","slug":"核心方法-exchange-v-x","link":"#核心方法-exchange-v-x","children":[]},{"level":3,"title":"slotExchange(Object item, boolean timed, long ns)","slug":"slotexchange-object-item-boolean-timed-long-ns","link":"#slotexchange-object-item-boolean-timed-long-ns","children":[]},{"level":3,"title":"arenaExchange(Object item, boolean timed, long ns)","slug":"arenaexchange-object-item-boolean-timed-long-ns","link":"#arenaexchange-object-item-boolean-timed-long-ns","children":[]},{"level":3,"title":"更深入理解","slug":"更深入理解","link":"#更深入理解","children":[]},{"level":3,"title":"Exchanger示例","slug":"exchanger示例","link":"#exchanger示例","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1687917370000,"updatedTime":1703493745000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":16.97,"words":5091},"filePathRelative":"java/thread/java-thread-x-juc-tool-exchanger.md","localizedDate":"2022年3月17日","excerpt":"<h1> JUC工具类: Exchanger详解</h1>\\n<blockquote>\\n<p>Exchanger是用于线程协作的工具类, 主要用于两个线程之间的数据交换。</p>\\n</blockquote>\\n<h2> 带着BAT大厂的面试问题去理解Exchanger</h2>\\n<blockquote>\\n<p>提示</p>\\n<p>请带着这些问题继续后文，会很大程度上帮助你更好的理解Exchanger。</p>\\n</blockquote>\\n<ul>\\n<li>Exchanger主要解决什么问题?</li>\\n<li>对比SynchronousQueue，为什么说Exchanger可被视为 SynchronousQueue 的双向形式?</li>\\n<li>Exchanger在不同的JDK版本中实现有什么差别?</li>\\n<li>Exchanger实现机制?</li>\\n<li>Exchanger已经有了slot单节点，为什么会加入arena node数组? 什么时候会用到数组?</li>\\n<li>arena可以确保不同的slot在arena中是不会相冲突的，那么是怎么保证的呢?</li>\\n<li>什么是伪共享，Exchanger中如何体现的?</li>\\n<li>Exchanger实现举例</li>\\n</ul>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
