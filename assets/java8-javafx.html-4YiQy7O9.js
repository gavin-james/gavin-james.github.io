import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o,c as l,a as e,b as a,d as r,f as i}from"./app-Kb1srcrM.js";const d={},c=i('<h1 id="java-8-javafx-2-0" tabindex="-1"><a class="header-anchor" href="#java-8-javafx-2-0" aria-hidden="true">#</a> Java 8 - JavaFx 2.0</h1><blockquote><p>JavaFX主要致力于富客户端开发，以弥补swing的缺陷，主要提供图形库与media库，支持audio,video,graphics,animation,3D等，同时采用现代化的css方式支持界面设计。同时又采用XUI方式以XML方式设计UI界面，达到显示与逻辑的分离。与android这方面确实有点相似性。</p></blockquote><h2 id="javafx历史" tabindex="-1"><a class="header-anchor" href="#javafx历史" aria-hidden="true">#</a> JavaFX历史</h2><p>跟java在服务器端和web端成绩相比，桌面一直是java的软肋，于是Sun公司在2008年推出JavaFX，弥补桌面软件的缺陷，请看下图JavaFX一路走过来的改进</p><figure><img src="https://www.pdai.tech/images/java/java8-javafx-1.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>从上图看出，一开始推出时候，开发者需使用一种名为JavaFX Script的静态的、声明式的编程语言来开发JavaFX应用程序。因为JavaFX Script将会被编译为Java bytecode，程序员可以使用Java代码代替。</p><p>JavaFX 2.0之后的版本摒弃了JavaFX Script语言，而作为一个Java API来使用。因此使用JavaFX平台实现的应用程序将直接通过标准Java代码来实现。</p><p>JavaFX 2.0 包含非常丰富的 UI 控件、图形和多媒体特性用于简化可视化应用的开发，WebView可直接在应用中嵌入网页；另外 2.0 版本允许使用 FXML 进行 UI 定义，这是一个脚本化基于 XML 的标识语言。</p><p>从JDK 7u6开始，JavaFx就与JDK捆绑在一起了，JavaFX团队称，下一个版本将是8.0，目前所有的工作都已经围绕8.0库进行。这是因为JavaFX将捆绑在Java 8中，因此该团队决定跳过几个版本号，迎头赶上Java 8。</p><h2 id="javafx8的新特性" tabindex="-1"><a class="header-anchor" href="#javafx8的新特性" aria-hidden="true">#</a> JavaFx8的新特性</h2><h4 id="全新现代主题-modena" tabindex="-1"><a class="header-anchor" href="#全新现代主题-modena" aria-hidden="true">#</a> 全新现代主题: Modena</h4><p>新的Modena主题来替换原来的Caspian主题。不过在Application的start()方法中，可以通过setUserAgentStylesheet(STYLESHEET_CASPIAN)来继续使用Caspian主题。</p>',12),h={href:"http://fxexperience.com/2013/03/modena-theme-update/",target:"_blank",rel:"noopener noreferrer"},v=i(`<h4 id="javafx-3d" tabindex="-1"><a class="header-anchor" href="#javafx-3d" aria-hidden="true">#</a> JavaFX 3D</h4><p>在JavaFX8中提供了3D图像处理API，包括Shape3D (Box, Cylinder, MeshView, Sphere子类),SubScene, Material, PickResult, LightBase (AmbientLight 和PointLight子类),SceneAntialiasing等。Camera类也得到了更新。从JavaDoc中可以找到更多信息。</p><h4 id="富文本" tabindex="-1"><a class="header-anchor" href="#富文本" aria-hidden="true">#</a> 富文本</h4><p>强化了富文本的支持</p><h4 id="treetableview" tabindex="-1"><a class="header-anchor" href="#treetableview" aria-hidden="true">#</a> TreeTableView</h4><h4 id="日期控件datepicker" tabindex="-1"><a class="header-anchor" href="#日期控件datepicker" aria-hidden="true">#</a> 日期控件DatePicker</h4><p>增加日期控件</p><h4 id="用于-css-结构的公共-api" tabindex="-1"><a class="header-anchor" href="#用于-css-结构的公共-api" aria-hidden="true">#</a> 用于 CSS 结构的公共 API</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CSS 样式设置是 JavaFX 的一项主要特性
CSS 已专门在私有 API 中实现(com.sun.javafx.css 软件包)
多种工具(例如 Scene Builder)需要 CSS 公共 API
开发人员将能够定义自定义 CSS 样式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="webview-增强功能" tabindex="-1"><a class="header-anchor" href="#webview-增强功能" aria-hidden="true">#</a> WebView 增强功能</h4>`,10),p={href:"https://blogs.oracle.com/nashorn/entry/open_for_business",target:"_blank",rel:"noopener noreferrer"},u={href:"http://javafx-jira.kenai.com/browse/RT-14947",target:"_blank",rel:"noopener noreferrer"},b={href:"http://javafx-jira.kenai.com/browse/RT-9782",target:"_blank",rel:"noopener noreferrer"},m=i(`<h4 id="javafx-scene-builder-2-0" tabindex="-1"><a class="header-anchor" href="#javafx-scene-builder-2-0" aria-hidden="true">#</a> JavaFX Scene Builder 2.0</h4><p>可视化工具，加速JavaFX图形界面的开发，下载地址</p><p>JavaFX Scene Builder如同NetBeans一般，通过拖拽的方式配置界面，待完成界面之後，保存为FXML格式文件，此文件以XML描述物件配置，再交由JavaFX程式处理，因此可減少直接以JavaFX编写界面的困難度。</p><p>JavaFX Scene Builder 2.0新增JavaFX Theme预览功能，菜单「Preview」→「JavaFX Theme」选择不同的主題，包括:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modena (FX8).
Modena Touch (FX8).
Modena High Contrast – Black on White (FX8).
Modena High Contrast – White on Black (FX8).
Modena High Contrast – Yellow on Black (FX8).
Caspian (FX2).
Caspian Embedded (FX2).
Caspian Embedded QVGA (FX2).
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javafx-8开发2048游戏" tabindex="-1"><a class="header-anchor" href="#javafx-8开发2048游戏" aria-hidden="true">#</a> JavaFX 8开发2048游戏</h2><p>2048虽然不像前段时间那么火了，但个人还是非常喜欢玩2048，空闲时间都忍不住来一发，感谢 Gabriele Cirulli 发明了这了不起 (并且会上瘾)的2048游戏，因为是用MIT协议开源出来，各种语言版本的2048游戏横空出世，下图是用JavaFX 8来开发的一款2048。</p><p>所用到的技术</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lambda expressions
Stream API
JavaFX 8
JavaFX CSS basics
JavaFX animationsfx2048相关类的说明
Game2048,游戏主类
GameManager,包含游戏界面布局(Board)以及Grid的操作(GridOperator)
Board,包含labels ，分数，grid ，Tile
Tile,游戏中的数字块
GridOperator,Grid操作类
Location,Direction 位置帮助类
RecordManager，SessionManager，纪录游戏分数，会话类
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),f={href:"http://xn--git-y28d6owz84kksflna244b34fk1ap82c3u4eyqyd.oschina.net/benhail/javase8-sample/tree/master/src/main/java/javase8sample/chapter13/javafx8/fx2048",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),a(" 总结")],-1),_=e("p",null,"比起AWT和SWING，JavaFX的优势很明显，各大主流IDE已经支持JavaFX的开发了，最佳的工具莫过于NetBeans，且随着lambda带来的好处，JavaFX的事件处理简洁了不少，以前需要写匿名函数类。另外JavaFX开源以来，JavaFX的生态环境也越来越活跃了，包括各种教程，嵌入式尝试，还有一些开源项目，比如: ControlsFX，JRebirth，DataFX Flow，mvvmFX，TestFX 等等。还有JavaFX是可以运行在Android和ios上面，这个很赞！",-1),g=e("p",null,"好了，总结到这里也差不多了，在RIA平台上面，有HTML5、Flex和微软的Sliverlight，JavaFX能否表现优秀，在于大家的各位，只要我们多用JavaFX，那么JavaFX也会越来越优秀，任何语言都是这样, THE END .",-1),F=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),a(" 参考")],-1),X={href:"https://github.com/oimchat/oim-fx",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/goxr3plus/FX-BorderlessScene",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/topics/material-ui",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/in-sideFX/Undecorator",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/brunoborges/webfx",target:"_blank",rel:"noopener noreferrer"},w={href:"https://blog.csdn.net/loongshawn/article/details/52805751",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.oracle.com/javafx/2/ui_controls/overview.htm#BABJACHC",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.oracle.com/technetwork/cn/articles/java/layoutfx-1536156-zhs.html",target:"_blank",rel:"noopener noreferrer"};function A(M,T){const n=s("ExternalLinkIcon");return o(),l("div",null,[c,e("p",null,[a("参考"),e("a",h,[a("http://fxexperience.com/2013/03/modena-theme-update/"),r(n)])]),v,e("ul",null,[e("li",null,[a("Nashorn JavaScript 引擎 "),e("a",p,[a("https://blogs.oracle.com/nashorn/entry/open_for_business"),r(n)])]),e("li",null,[a("WebSocket "),e("a",u,[a("http://javafx-jira.kenai.com/browse/RT-14947"),r(n)])]),e("li",null,[a("Web Workers "),e("a",b,[a("http://javafx-jira.kenai.com/browse/RT-9782"),r(n)])])]),m,e("p",null,[a("这里是源码地址，"),e("a",f,[a("大家感兴趣的可以去学习下git.oschina.net/benhail/javase8-sample/tree/master/src/main/java/javase8sample/chapter13/javafx8/fx2048"),r(n)])]),x,_,g,F,e("ul",null,[e("li",null,[e("a",X,[a("https://github.com/oimchat/oim-fx"),r(n)])]),e("li",null,[e("a",J,[a("https://github.com/goxr3plus/FX-BorderlessScene"),r(n)])]),e("li",null,[e("a",j,[a("https://github.com/topics/material-ui"),r(n)])]),e("li",null,[e("a",S,[a("https://github.com/in-sideFX/Undecorator"),r(n)])]),e("li",null,[e("a",k,[a("https://github.com/brunoborges/webfx"),r(n)])]),e("li",null,[e("a",w,[a("https://blog.csdn.net/loongshawn/article/details/52805751"),r(n)])]),e("li",null,[e("a",C,[a("https://docs.oracle.com/javafx/2/ui_controls/overview.htm#BABJACHC"),r(n)])]),e("li",null,[e("a",B,[a("https://www.oracle.com/technetwork/cn/articles/java/layoutfx-1536156-zhs.html"),r(n)])])])])}const D=t(d,[["render",A],["__file","java8-javafx.html.vue"]]);export{D as default};
