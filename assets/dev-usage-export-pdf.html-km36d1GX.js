import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-IRwI16JE.js";const p={},e=t(`<h1 id="itext-pdf-导出" tabindex="-1"><a class="header-anchor" href="#itext-pdf-导出" aria-hidden="true">#</a> Itext PDF 导出</h1><blockquote><p>给我的文档系统添加了导出，本文记录PDF填坑小结。</p></blockquote><h2 id="pdf导出的实现" tabindex="-1"><a class="header-anchor" href="#pdf导出的实现" aria-hidden="true">#</a> PDF导出的实现</h2><h3 id="导出流" tabindex="-1"><a class="header-anchor" href="#导出流" aria-hidden="true">#</a> 导出流</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;export&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportPdfNew</span><span class="token punctuation">(</span><span class="token class-name">String</span> mdContent<span class="token punctuation">,</span> <span class="token class-name">String</span> type<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;multipart/form-data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">String</span> title <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> author <span class="token operator">=</span> <span class="token string">&quot;pdai&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> mdFileContent <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token class-name">ServletOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fileBytes <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		
		<span class="token class-name">String</span> htmlFile <span class="token operator">=</span> <span class="token class-name">StringEscapeUtils</span><span class="token punctuation">.</span><span class="token function">unescapeHtml4</span><span class="token punctuation">(</span>mdContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">String</span> cleanedHtmlFile <span class="token operator">=</span> htmlFile<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;img&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;img style=\\&quot;display:inline-block;width:100%;max-width:650px;\\&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cleanedHtmlFile <span class="token operator">=</span> <span class="token function">cleanHtml</span><span class="token punctuation">(</span>cleanedHtmlFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fileBytes <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>author<span class="token punctuation">,</span> cleanedHtmlFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span>
				<span class="token string">&quot;inline; filename=\\&quot;&quot;</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.pdf\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			
		out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fileBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
		out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清理html" tabindex="-1"><a class="header-anchor" href="#清理html" aria-hidden="true">#</a> 清理HTML</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">cleanHtml</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ConversionException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
	<span class="token class-name">InputStream</span> stringAsStream<span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		stringAsStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token class-name">ConversionException</span><span class="token punctuation">.</span><span class="token constant">HTML_TO_PDF_EXCEPTION</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">HtmlCleaner</span> cleaner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HtmlCleaner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">TagNode</span> node <span class="token operator">=</span> cleaner<span class="token punctuation">.</span><span class="token function">clean</span><span class="token punctuation">(</span>stringAsStream<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">TagNode</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TagNode</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	t<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">String</span> html <span class="token operator">=</span> cleaner<span class="token punctuation">.</span><span class="token function">getInnerHtml</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页眉页脚支持" tabindex="-1"><a class="header-anchor" href="#页眉页脚支持" aria-hidden="true">#</a> 页眉页脚支持</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HeaderFooterEvent</span> <span class="token keyword">extends</span> <span class="token class-name">PdfPageEventHelper</span> <span class="token punctuation">{</span>
	<span class="token class-name">String</span> header<span class="token punctuation">,</span> author<span class="token punctuation">;</span>
	<span class="token class-name">PdfTemplate</span> total<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token class-name">String</span> header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>header <span class="token operator">=</span> header<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token class-name">String</span> author<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>author <span class="token operator">=</span> author<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onOpenDocument</span><span class="token punctuation">(</span><span class="token class-name">PdfWriter</span> writer<span class="token punctuation">,</span> <span class="token class-name">Document</span> document<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		total <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">getDirectContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createTemplate</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token comment">//	public void onEndPage(PdfWriter writer, Document document) {</span>
<span class="token comment">//		PdfPTable table = new PdfPTable(3);</span>
<span class="token comment">//		try {</span>
<span class="token comment">//			table.setWidths(new int[] { 60, 24, 2 });</span>
<span class="token comment">//			table.setTotalWidth(600);</span>
<span class="token comment">//			table.setLockedWidth(true);</span>
<span class="token comment">//			table.getDefaultCell().setFixedHeight(40);</span>
<span class="token comment">//			table.getDefaultCell().setBorder(Rectangle.BOX);</span>
<span class="token comment">//			table.getDefaultCell().setBorderWidth(0.1f);</span>
<span class="token comment">//			table.getDefaultCell().setBorderColor(Color.gray);</span>
<span class="token comment">//</span>
<span class="token comment">//			table.addCell(header);</span>
<span class="token comment">//			table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_RIGHT);</span>
<span class="token comment">//			table.addCell(String.format(&quot;Page %d of&quot;, writer.getPageNumber()));</span>
<span class="token comment">//			PdfPCell cell = new PdfPCell(Image.getInstance(total));</span>
<span class="token comment">//			cell.setBorder(Rectangle.BOTTOM);</span>
<span class="token comment">//			table.addCell(cell);</span>
<span class="token comment">//			table.writeSelectedRows(0, -1, 34, 803, writer.getDirectContent());</span>
<span class="token comment">//</span>
<span class="token comment">//		} catch (DocumentException de) {</span>
<span class="token comment">//			throw new ExceptionConverter(de);</span>
<span class="token comment">//		}</span>
<span class="token comment">//	}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onEndPage</span><span class="token punctuation">(</span><span class="token class-name">PdfWriter</span> writer<span class="token punctuation">,</span> <span class="token class-name">Document</span> document<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        
        <span class="token class-name">PdfContentByte</span> cb <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">getDirectContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        cb<span class="token punctuation">.</span><span class="token function">saveState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        cb<span class="token punctuation">.</span><span class="token function">beginText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">BaseFont</span> bf <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            bf <span class="token operator">=</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">HELVETICA</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">WINANSI</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">EMBEDDED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        cb<span class="token punctuation">.</span><span class="token function">setColorFill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GRAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cb<span class="token punctuation">.</span><span class="token function">setFontAndSize</span><span class="token punctuation">(</span>bf<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        
          
        <span class="token comment">//Header  </span>
        <span class="token keyword">float</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
          
        <span class="token comment">//左  </span>
        cb<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span><span class="token class-name">PdfContentByte</span><span class="token punctuation">.</span><span class="token constant">ALIGN_LEFT</span><span class="token punctuation">,</span>  
                           <span class="token string">&quot;Author: &quot;</span> <span class="token operator">+</span> author<span class="token punctuation">,</span>   
                           document<span class="token punctuation">.</span><span class="token function">left</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//中  </span>
<span class="token comment">//        cb.showTextAligned(PdfContentByte.ALIGN_CENTER,  </span>
<span class="token comment">//                            writer.getPageNumber()+ &quot; page&quot;,  </span>
<span class="token comment">//                           (document.right() + document.left())/2,  </span>
<span class="token comment">//                           x, 0);  </span>
        <span class="token comment">//右  </span>
        cb<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span><span class="token class-name">PdfContentByte</span><span class="token punctuation">.</span><span class="token constant">ALIGN_RIGHT</span><span class="token punctuation">,</span>  
                           <span class="token string">&quot;Email: suzhou.daipeng@gmail.com&quot;</span><span class="token punctuation">,</span>  
                           document<span class="token punctuation">.</span><span class="token function">right</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">//Footer  </span>
        <span class="token keyword">float</span> y <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">bottom</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">//左  </span>
        cb<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span><span class="token class-name">PdfContentByte</span><span class="token punctuation">.</span><span class="token constant">ALIGN_LEFT</span><span class="token punctuation">,</span>  
                           <span class="token string">&quot;Confidential&quot;</span><span class="token punctuation">,</span>  
                           document<span class="token punctuation">.</span><span class="token function">left</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//中  </span>
		cb<span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span><span class="token class-name">PdfContentByte</span><span class="token punctuation">.</span><span class="token constant">ALIGN_CENTER</span><span class="token punctuation">,</span>  
				<span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;- %d -&quot;</span><span class="token punctuation">,</span> writer<span class="token punctuation">.</span><span class="token function">getPageNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
		                   <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">right</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">left</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>  
		                   y<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//右  </span>
<span class="token comment">//        cb.showTextAligned(PdfContentByte.ALIGN_RIGHT,  </span>
<span class="token comment">//                           &quot;F-Right&quot;,  </span>
<span class="token comment">//                           document.right(), y, 0);  </span>
  
        cb<span class="token punctuation">.</span><span class="token function">endText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
          
        cb<span class="token punctuation">.</span><span class="token function">restoreState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCloseDocument</span><span class="token punctuation">(</span><span class="token class-name">PdfWriter</span> writer<span class="token punctuation">,</span> <span class="token class-name">Document</span> document<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ColumnText</span><span class="token punctuation">.</span><span class="token function">showTextAligned</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> <span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token constant">ALIGN_LEFT</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Phrase</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>writer<span class="token punctuation">.</span><span class="token function">getPageNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>
				<span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pdf中文支持" tabindex="-1"><a class="header-anchor" href="#pdf中文支持" aria-hidden="true">#</a> PDF中文支持</h2><blockquote><p>常见的中文支持思路:</p></blockquote><ul><li>添加itext-asian.jar</li><li>Windows字体添加到项目中，导出时通过创建该字体对象；</li><li>classpath设置</li></ul><p>简单demo如下:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">oliver<span class="token punctuation">.</span>itext<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">DocumentException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Font</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">Paragraph</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span>pdf<span class="token punctuation">.</span></span><span class="token class-name">BaseFont</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>itextpdf<span class="token punctuation">.</span>text<span class="token punctuation">.</span>pdf<span class="token punctuation">.</span></span><span class="token class-name">PdfWriter</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PDF2Chinese</span>  
<span class="token punctuation">{</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">DocumentException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span>  
    <span class="token punctuation">{</span>  
        <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;chinese.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">PdfWriter</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        document<span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//方法一: 使用Windows系统字体(TrueType)  </span>
        <span class="token class-name">BaseFont</span> baseFont <span class="token operator">=</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token string">&quot;C:/Windows/Fonts/SIMYOU.TTF&quot;</span><span class="token punctuation">,</span><span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">IDENTITY_H</span><span class="token punctuation">,</span><span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">NOT_EMBEDDED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
          
        <span class="token comment">//方法二: 使用iTextAsian.jar中的字体  </span>
        <span class="token comment">//BaseFont baseFont = BaseFont.createFont(&quot;STSong-Light&quot;,BaseFont.IDENTITY_H,BaseFont.NOT_EMBEDDED);  </span>
          
        <span class="token comment">//方法三: 使用资源字体(ClassPath)  </span>
        <span class="token comment">////BaseFont baseFont = BaseFont.createFont(&quot;/SIMYOU.TTF&quot;,BaseFont.IDENTITY_H,BaseFont.NOT_EMBEDDED);  </span>
          
        <span class="token class-name">Font</span> font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span>baseFont<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        document<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Paragraph</span><span class="token punctuation">(</span><span class="token string">&quot;解决中文问题了！&quot;</span><span class="token punctuation">,</span>font<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        document<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过itextfontresolvert添加字体" tabindex="-1"><a class="header-anchor" href="#通过itextfontresolvert添加字体" aria-hidden="true">#</a> 通过ITextFontResolvert添加字体</h3><p>将Windows下fonts中所需要的字体拷贝到项目classpath下:</p><p>在代码中通过<code>ITextFontResolver</code>添加字体，具体代码如下:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> author<span class="token punctuation">,</span> <span class="token class-name">String</span> input<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">ConversionException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>lowagie<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>DocumentException</span> <span class="token punctuation">{</span>
	<span class="token class-name">ITextRenderer</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ITextRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	renderer<span class="token punctuation">.</span><span class="token function">setDocumentFromString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	renderer<span class="token punctuation">.</span><span class="token function">setPDFVersion</span><span class="token punctuation">(</span><span class="token class-name">PdfWriter</span><span class="token punctuation">.</span><span class="token constant">VERSION_1_7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">HeaderFooterEvent</span> headerFooterEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeaderFooterEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	headerFooterEvent<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span>
	renderer<span class="token punctuation">.</span><span class="token function">setPdfPageEvent</span><span class="token punctuation">(</span>headerFooterEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">ITextFontResolver</span> fontResolver <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">getFontResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fontResolver<span class="token punctuation">.</span><span class="token function">addFont</span><span class="token punctuation">(</span>fontPath<span class="token operator">+</span><span class="token string">&quot;MSYH.TTC&quot;</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">IDENTITY_H</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">NOT_EMBEDDED</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 微软雅黑</span>
	fontResolver<span class="token punctuation">.</span><span class="token function">addFont</span><span class="token punctuation">(</span>fontPath<span class="token operator">+</span><span class="token string">&quot;MSYHBD.TTC&quot;</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">IDENTITY_H</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">NOT_EMBEDDED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fontResolver<span class="token punctuation">.</span><span class="token function">addFont</span><span class="token punctuation">(</span>fontPath<span class="token operator">+</span><span class="token string">&quot;MSYHL.TTC&quot;</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">IDENTITY_H</span><span class="token punctuation">,</span> <span class="token class-name">BaseFont</span><span class="token punctuation">.</span><span class="token constant">NOT_EMBEDDED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	renderer<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">ByteArrayOutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	renderer<span class="token punctuation">.</span><span class="token function">createPDF</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> bytes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pdf-linux环境下中文字体乱码" tabindex="-1"><a class="header-anchor" href="#pdf-linux环境下中文字体乱码" aria-hidden="true">#</a> PDF Linux环境下中文字体乱码</h2><blockquote><p>用itext生成pdf在windows环境下没有出现中文乱码而在linux下出现中文乱码，打开pdf查看pdf编码，以及显示的编码，发现编码并没有对应。原因是使用的宋体和微软雅黑在linux环境下并没有安装。</p></blockquote><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h3><ul><li>由于我这边PDF生成是通过HTML转化的，所以第一步先导出HTML，去查看需要用哪些字体文件；</li><li>到windows环境下将所需字体拷贝到linux下。(simsun.ttc(宋体), msyf.ttf(微软雅黑))</li><li>到linux环境下创建目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-pv</span> /usr/share/fonts/chinese/TrueType
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将字体放入目录下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/share/fonts/chinese/TrueType
<span class="token function">chmod</span> <span class="token number">755</span> * 为字体赋予可执行权限
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>建立字体缓存</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mkfontscale <span class="token punctuation">(</span>如果提示 mkfontscale: <span class="token builtin class-name">command</span> not found，需自行安装 <span class="token comment"># yum install mkfontscale )</span>
mkfontdir
fc-cache <span class="token parameter variable">-fv</span> <span class="token punctuation">(</span>如果提示 fc-cache: <span class="token builtin class-name">command</span> not found，则需要安装<span class="token comment"># yum install fontconfig )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>reboot重启系统</li></ul><blockquote><p>经不同Linux环境测试，以上步骤必须顺序全部执行， 建立字体缓存必须是在字体拷贝完成之后顺序执行 mkfontscale，mkfontdir，fc-cache -fv</p></blockquote>`,29),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","dev-usage-export-pdf.html.vue"]]);export{r as default};
