const e=JSON.parse('{"key":"v-5cd21616","path":"/db/nosql-mongo/mongo-z-sharding.html","title":"Mongo进阶 - DB核心：分片Sharding","lang":"zh-CN","frontmatter":{"date":"2022-07-18T00:00:00.000Z","category":["NoSQL MongoDB"],"tag":["NoSQL MongoDB"],"description":"Mongo进阶 - DB核心：分片Sharding 分片（sharding）是MongoDB通过水平扩展将数据集分布在不同的服务器上来提高自己的存储容量和吞吐量。和MySQL分区方案相比，MongoDB的最大区别在于它几乎能自动完成所有事情，只要告诉MongoDB要分配数据，它就能自动维护数据在不同服务器之间的均衡。 为什么要引入分片 高数据量和吞吐量的数据库应用会对单机的性能造成较大压力, 大的查询量会将单机的CPU耗尽, 大的数据量对单机的存储压力较大, 最终会耗尽系统的内存而将压力转移到磁盘IO上。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/db/nosql-mongo/mongo-z-sharding.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"Mongo进阶 - DB核心：分片Sharding"}],["meta",{"property":"og:description","content":"Mongo进阶 - DB核心：分片Sharding 分片（sharding）是MongoDB通过水平扩展将数据集分布在不同的服务器上来提高自己的存储容量和吞吐量。和MySQL分区方案相比，MongoDB的最大区别在于它几乎能自动完成所有事情，只要告诉MongoDB要分配数据，它就能自动维护数据在不同服务器之间的均衡。 为什么要引入分片 高数据量和吞吐量的数据库应用会对单机的性能造成较大压力, 大的查询量会将单机的CPU耗尽, 大的数据量对单机的存储压力较大, 最终会耗尽系统的内存而将压力转移到磁盘IO上。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T08:34:19.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"NoSQL MongoDB"}],["meta",{"property":"article:published_time","content":"2022-07-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T08:34:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mongo进阶 - DB核心：分片Sharding\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T08:34:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"为什么要引入分片","slug":"为什么要引入分片","link":"#为什么要引入分片","children":[]},{"level":2,"title":"分片集群的结构","slug":"分片集群的结构","link":"#分片集群的结构","children":[]},{"level":2,"title":"分片数据如何存储：Chunk","slug":"分片数据如何存储-chunk","link":"#分片数据如何存储-chunk","children":[{"level":3,"title":"Chunk是什么","slug":"chunk是什么","link":"#chunk是什么","children":[]},{"level":3,"title":"chunksize的选择","slug":"chunksize的选择","link":"#chunksize的选择","children":[]},{"level":3,"title":"chunk分裂及迁移","slug":"chunk分裂及迁移","link":"#chunk分裂及迁移","children":[]}]},{"level":2,"title":"如何进行分片：分片依据和分片算法","slug":"如何进行分片-分片依据和分片算法","link":"#如何进行分片-分片依据和分片算法","children":[{"level":3,"title":"分片键（Shard key）","slug":"分片键-shard-key","link":"#分片键-shard-key","children":[]},{"level":3,"title":"哈希分片（Hash Sharding)","slug":"哈希分片-hash-sharding","link":"#哈希分片-hash-sharding","children":[]},{"level":3,"title":"范围分片（range sharding）","slug":"范围分片-range-sharding","link":"#范围分片-range-sharding","children":[]},{"level":3,"title":"哈希和范围的结合","slug":"哈希和范围的结合","link":"#哈希和范围的结合","children":[]}]},{"level":2,"title":"分片数据按区域：Zone","slug":"分片数据按区域-zone","link":"#分片数据按区域-zone","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703579659000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":7.53,"words":2258},"filePathRelative":"db/nosql-mongo/mongo-z-sharding.md","localizedDate":"2022年7月18日","excerpt":"<h1> Mongo进阶 - DB核心：分片Sharding</h1>\\n<blockquote>\\n<p>分片（sharding）是MongoDB通过水平扩展将数据集分布在不同的服务器上来提高自己的存储容量和吞吐量。和MySQL分区方案相比，MongoDB的最大区别在于它几乎能自动完成所有事情，只要告诉MongoDB要分配数据，它就能自动维护数据在不同服务器之间的均衡。</p>\\n</blockquote>\\n<h2> 为什么要引入分片</h2>\\n<p>高数据量和吞吐量的数据库应用会对单机的性能造成较大压力, 大的查询量会将单机的CPU耗尽, 大的数据量对单机的存储压力较大, 最终会耗尽系统的内存而将压力转移到磁盘IO上。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
