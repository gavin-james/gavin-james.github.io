const e=JSON.parse('{"key":"v-e559e6c6","path":"/db/nosql-es/elasticsearch-x-agg-pipeline.html","title":"ES详解 - 聚合：聚合查询之Pipline聚合详解","lang":"zh-CN","frontmatter":{"date":"2022-08-05T00:00:00.000Z","category":["NoSQL ElasticSearch"],"tag":["NoSQL ElasticSearch"],"description":"ES详解 - 聚合：聚合查询之Pipline聚合详解 前文主要讲了 ElasticSearch提供的三种聚合方式之指标聚合（Metric Aggregation)，本文主要讲讲管道聚合（Pipeline Aggregation)。简单而言就是让上一步的聚合结果成为下一个聚合的输入，这就是管道。 如何理解pipeline聚合 如何理解管道聚合呢？最重要的是要站在设计者角度看这个功能的要实现的目的：让上一步的聚合结果成为下一个聚合的输入，这就是管道。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/db/nosql-es/elasticsearch-x-agg-pipeline.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"ES详解 - 聚合：聚合查询之Pipline聚合详解"}],["meta",{"property":"og:description","content":"ES详解 - 聚合：聚合查询之Pipline聚合详解 前文主要讲了 ElasticSearch提供的三种聚合方式之指标聚合（Metric Aggregation)，本文主要讲讲管道聚合（Pipeline Aggregation)。简单而言就是让上一步的聚合结果成为下一个聚合的输入，这就是管道。 如何理解pipeline聚合 如何理解管道聚合呢？最重要的是要站在设计者角度看这个功能的要实现的目的：让上一步的聚合结果成为下一个聚合的输入，这就是管道。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T08:34:19.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"NoSQL ElasticSearch"}],["meta",{"property":"article:published_time","content":"2022-08-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T08:34:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES详解 - 聚合：聚合查询之Pipline聚合详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T08:34:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"如何理解pipeline聚合","slug":"如何理解pipeline聚合","link":"#如何理解pipeline聚合","children":[{"level":3,"title":"管道机制的常见场景","slug":"管道机制的常见场景","link":"#管道机制的常见场景","children":[]},{"level":3,"title":"ElasticSearch设计管道机制","slug":"elasticsearch设计管道机制","link":"#elasticsearch设计管道机制","children":[]}]},{"level":2,"title":"一些例子","slug":"一些例子","link":"#一些例子","children":[{"level":3,"title":"Average bucket 聚合","slug":"average-bucket-聚合","link":"#average-bucket-聚合","children":[]},{"level":3,"title":"Stats bucket 聚合","slug":"stats-bucket-聚合","link":"#stats-bucket-聚合","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703579659000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":3.97,"words":1190},"filePathRelative":"db/nosql-es/elasticsearch-x-agg-pipeline.md","localizedDate":"2022年8月5日","excerpt":"<h1> ES详解 - 聚合：聚合查询之Pipline聚合详解</h1>\\n<blockquote>\\n<p>前文主要讲了 ElasticSearch提供的三种聚合方式之指标聚合（Metric Aggregation)，本文主要讲讲管道聚合（Pipeline Aggregation)。简单而言就是让上一步的聚合结果成为下一个聚合的输入，这就是管道。</p>\\n</blockquote>\\n<h2> 如何理解pipeline聚合</h2>\\n<blockquote>\\n<p>如何理解管道聚合呢？最重要的是要站在设计者角度看这个功能的要实现的目的：让上一步的聚合结果成为下一个聚合的输入，这就是管道。</p>\\n</blockquote>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
