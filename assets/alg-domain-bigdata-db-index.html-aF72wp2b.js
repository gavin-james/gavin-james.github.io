const e=JSON.parse('{"key":"v-7cf660e4","path":"/develop/algorithms-structures/alg-domain/alg-domain-bigdata-db-index.html","title":"大数据处理 - Trie树/数据库/倒排索引","lang":"zh-CN","frontmatter":{"date":"2019-07-30T00:00:00.000Z","category":["算法和数据结构"],"tag":["领域算法"],"description":"大数据处理 - Trie树/数据库/倒排索引 大数据处理处理思想之 Trie树/数据库/倒排索引, 本文主要梳理下思路。 Trie树 Trie树的介绍和实现请参考 树 - 前缀树(Trie) 适用范围: 数据量大，重复多，但是数据种类小可以放入内存 基本原理及要点: 实现方式，节点孩子的表示方式 扩展: 压缩实现。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-domain/alg-domain-bigdata-db-index.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"大数据处理 - Trie树/数据库/倒排索引"}],["meta",{"property":"og:description","content":"大数据处理 - Trie树/数据库/倒排索引 大数据处理处理思想之 Trie树/数据库/倒排索引, 本文主要梳理下思路。 Trie树 Trie树的介绍和实现请参考 树 - 前缀树(Trie) 适用范围: 数据量大，重复多，但是数据种类小可以放入内存 基本原理及要点: 实现方式，节点孩子的表示方式 扩展: 压缩实现。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"领域算法"}],["meta",{"property":"article:published_time","content":"2019-07-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大数据处理 - Trie树/数据库/倒排索引\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"Trie树","slug":"trie树","link":"#trie树","children":[]},{"level":2,"title":"数据库索引","slug":"数据库索引","link":"#数据库索引","children":[]},{"level":2,"title":"倒排索引(Inverted index)","slug":"倒排索引-inverted-index","link":"#倒排索引-inverted-index","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":2.48,"words":743},"filePathRelative":"develop/algorithms-structures/alg-domain/alg-domain-bigdata-db-index.md","localizedDate":"2019年7月30日","excerpt":"<h1> 大数据处理 - Trie树/数据库/倒排索引</h1>\\n<blockquote>\\n<p>大数据处理处理思想之 Trie树/数据库/倒排索引, 本文主要梳理下思路。</p>\\n</blockquote>\\n<h2> Trie树</h2>\\n<blockquote>\\n<p>Trie树的介绍和实现请参考 <a href=\\"\\">树 - 前缀树(Trie)</a></p>\\n</blockquote>\\n<ul>\\n<li><code>适用范围</code>: 数据量大，重复多，但是数据种类小可以放入内存</li>\\n<li><code>基本原理及要点</code>: 实现方式，节点孩子的表示方式</li>\\n<li><code>扩展</code>: 压缩实现。</li>\\n</ul>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
