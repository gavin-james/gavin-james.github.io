const e=JSON.parse('{"key":"v-601746ae","path":"/develop/algorithms-structures/alg-sort/alg-sort-x-heap.html","title":"排序 - 堆排序(Heap Sort)","lang":"zh-CN","frontmatter":{"date":"2019-07-06T00:00:00.000Z","category":["算法和数据结构"],"tag":["排序算法"],"description":"排序 - 堆排序(Heap Sort) 堆排序是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。 堆排序介绍 学习堆排序之前，有必要了解堆！若读者不熟悉堆，建议先了解堆(建议可以通过二叉堆，左倾堆，斜堆，二项堆或斐波那契堆等文章进行了解)，然后再来学习本章。 我们知道，堆分为\\"最大堆\\"和\\"最小堆\\"。最大堆通常被用来进行\\"升序\\"排序，而最小堆通常被用来进行\\"降序\\"排序。 鉴于最大堆和最小堆是对称关系，理解其中一种即可。本文将对最大堆实现的升序排序进行详细说明。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-sort/alg-sort-x-heap.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"排序 - 堆排序(Heap Sort)"}],["meta",{"property":"og:description","content":"排序 - 堆排序(Heap Sort) 堆排序是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。 堆排序介绍 学习堆排序之前，有必要了解堆！若读者不熟悉堆，建议先了解堆(建议可以通过二叉堆，左倾堆，斜堆，二项堆或斐波那契堆等文章进行了解)，然后再来学习本章。 我们知道，堆分为\\"最大堆\\"和\\"最小堆\\"。最大堆通常被用来进行\\"升序\\"排序，而最小堆通常被用来进行\\"降序\\"排序。 鉴于最大堆和最小堆是对称关系，理解其中一种即可。本文将对最大堆实现的升序排序进行详细说明。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"排序算法"}],["meta",{"property":"article:published_time","content":"2019-07-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"排序 - 堆排序(Heap Sort)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"堆排序介绍","slug":"堆排序介绍","link":"#堆排序介绍","children":[]},{"level":2,"title":"堆排序实现","slug":"堆排序实现","link":"#堆排序实现","children":[{"level":3,"title":"初始化堆","slug":"初始化堆","link":"#初始化堆","children":[]},{"level":3,"title":"交换数据","slug":"交换数据","link":"#交换数据","children":[]}]},{"level":2,"title":"堆排序复杂度和稳定性","slug":"堆排序复杂度和稳定性","link":"#堆排序复杂度和稳定性","children":[{"level":3,"title":"堆排序时间复杂度","slug":"堆排序时间复杂度","link":"#堆排序时间复杂度","children":[]},{"level":3,"title":"堆排序稳定性","slug":"堆排序稳定性","link":"#堆排序稳定性","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":8.81,"words":2644},"filePathRelative":"develop/algorithms-structures/alg-sort/alg-sort-x-heap.md","localizedDate":"2019年7月6日","excerpt":"<h1> 排序 - 堆排序(Heap Sort)</h1>\\n<blockquote>\\n<p>堆排序是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p>\\n</blockquote>\\n<h2> 堆排序介绍</h2>\\n<p>学习堆排序之前，有必要了解堆！若读者不熟悉堆，建议先了解堆(建议可以通过二叉堆，左倾堆，斜堆，二项堆或斐波那契堆等文章进行了解)，然后再来学习本章。</p>\\n<p>我们知道，堆分为\\"最大堆\\"和\\"最小堆\\"。最大堆通常被用来进行\\"升序\\"排序，而最小堆通常被用来进行\\"降序\\"排序。 鉴于最大堆和最小堆是对称关系，理解其中一种即可。本文将对最大堆实现的升序排序进行详细说明。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
