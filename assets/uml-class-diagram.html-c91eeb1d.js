const e=JSON.parse('{"key":"v-379fc8cc","path":"/develop/design/uml-class-diagram.html","title":"UML类图","lang":"zh-CN","frontmatter":{"title":"UML类图","date":"2019-10-06T00:00:00.000Z","category":["设计模式"],"tag":["设计模式"],"description":"UML 基本介绍 997 年 UML 被国际对象管理组织（OMG）采纳为面向对象的建模语言的国际标准。它的特点是 简单、统一、图形化、能表达软件设计中的动态与静态信息。 UML：Unified modeling language UML (统一建模语言)，是一种用于软件系统分析和设计的语言工具，它用于帮助软件开发人员进行思考和记录思路的结果。 UML 本身是一套符号的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和他 们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如右图：","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/design/uml-class-diagram.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"UML类图"}],["meta",{"property":"og:description","content":"UML 基本介绍 997 年 UML 被国际对象管理组织（OMG）采纳为面向对象的建模语言的国际标准。它的特点是 简单、统一、图形化、能表达软件设计中的动态与静态信息。 UML：Unified modeling language UML (统一建模语言)，是一种用于软件系统分析和设计的语言工具，它用于帮助软件开发人员进行思考和记录思路的结果。 UML 本身是一套符号的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和他 们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如右图："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-28T01:56:10.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2019-10-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-28T01:56:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML类图\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-28T01:56:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"UML 基本介绍","slug":"uml-基本介绍","link":"#uml-基本介绍","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":2,"title":"基本构件","slug":"基本构件","link":"#基本构件","children":[]},{"level":2,"title":"UML 接口","slug":"uml-接口","link":"#uml-接口","children":[]},{"level":2,"title":"UML 类图","slug":"uml-类图","link":"#uml-类图","children":[]},{"level":2,"title":"类之间的关系","slug":"类之间的关系","link":"#类之间的关系","children":[{"level":3,"title":"类图—依赖关系（Dependence）","slug":"类图—依赖关系-dependence","link":"#类图—依赖关系-dependence","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":3,"title":"类图—关联关系（Association）","slug":"类图—关联关系-association","link":"#类图—关联关系-association","children":[]},{"level":3,"title":"类图—聚合关系（Aggregation）","slug":"类图—聚合关系-aggregation","link":"#类图—聚合关系-aggregation","children":[]},{"level":3,"title":"类图—组合关系（Composition）","slug":"类图—组合关系-composition","link":"#类图—组合关系-composition","children":[]},{"level":3,"title":"类图—泛化关系(generalization）","slug":"类图—泛化关系-generalization","link":"#类图—泛化关系-generalization","children":[]},{"level":3,"title":"类图—实现关系（Implementation）","slug":"类图—实现关系-implementation","link":"#类图—实现关系-implementation","children":[]}]},{"level":2,"title":"类与类箭头技巧","slug":"类与类箭头技巧","link":"#类与类箭头技巧","children":[]}],"git":{"createdTime":1687917370000,"updatedTime":1687917370000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":12.38,"words":3715},"filePathRelative":"develop/design/uml-class-diagram.md","localizedDate":"2019年10月6日","excerpt":"<h2> UML 基本介绍</h2>\\n<p>997 年 UML 被国际对象管理组织（OMG）采纳为面向对象的建模语言的国际标准。它的特点是 <strong>简单、统一、图形化、能表达软件设计中的动态与静态信息</strong>。</p>\\n<p>UML：Unified modeling language UML (统一建模语言)，是一种用于软件系统分析和设计的语言工具，它用于帮助软件开发人员进行思考和记录思路的结果。</p>\\n<p>UML 本身是一套符号的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和他 们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如右图：</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
