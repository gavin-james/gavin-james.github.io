const e=JSON.parse('{"key":"v-73004147","path":"/develop/security/dev-security-x-xss.html","title":"开发安全 - XSS 详解","lang":"zh-CN","frontmatter":{"date":"2019-04-16T00:00:00.000Z","category":["开发理论"],"tag":["安全相关"],"description":"开发安全 - XSS 详解 XSS是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。 XSS 简介 举一个简单的例子，就是留言板。我们知道留言板通常的任务就是把用户留言的内容展示出来。正常情况下，用户的留言都是正常的语言文字，留言板显示的内容也就没毛病。然而这个时候如果有人不按套路出牌，在留言内容中丢进去一行","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/security/dev-security-x-xss.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"开发安全 - XSS 详解"}],["meta",{"property":"og:description","content":"开发安全 - XSS 详解 XSS是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。 XSS 简介 举一个简单的例子，就是留言板。我们知道留言板通常的任务就是把用户留言的内容展示出来。正常情况下，用户的留言都是正常的语言文字，留言板显示的内容也就没毛病。然而这个时候如果有人不按套路出牌，在留言内容中丢进去一行"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T09:56:01.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"安全相关"}],["meta",{"property":"article:published_time","content":"2019-04-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T09:56:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发安全 - XSS 详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-04-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T09:56:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"XSS 简介","slug":"xss-简介","link":"#xss-简介","children":[]},{"level":2,"title":"XSS 攻击类型","slug":"xss-攻击类型","link":"#xss-攻击类型","children":[{"level":3,"title":"反射型xss攻击","slug":"反射型xss攻击","link":"#反射型xss攻击","children":[]},{"level":3,"title":"存储型xss攻击","slug":"存储型xss攻击","link":"#存储型xss攻击","children":[]},{"level":3,"title":"DOM型xss攻击","slug":"dom型xss攻击","link":"#dom型xss攻击","children":[]}]},{"level":2,"title":"XSS 攻击的危害","slug":"xss-攻击的危害","link":"#xss-攻击的危害","children":[]},{"level":2,"title":"XSS 攻击的防御","slug":"xss-攻击的防御","link":"#xss-攻击的防御","children":[{"level":3,"title":"escapeHTML","slug":"escapehtml","link":"#escapehtml","children":[]},{"level":3,"title":"过滤或者校验","slug":"过滤或者校验","link":"#过滤或者校验","children":[]},{"level":3,"title":"CSP(Content Security Policy)","slug":"csp-content-security-policy","link":"#csp-content-security-policy","children":[]}]},{"level":2,"title":"XSS 攻击再深入理解","slug":"xss-攻击再深入理解","link":"#xss-攻击再深入理解","children":[{"level":3,"title":"对script再做阐述","slug":"对script再做阐述","link":"#对script再做阐述","children":[]},{"level":3,"title":"是不是只要对script进行防御呢？","slug":"是不是只要对script进行防御呢","link":"#是不是只要对script进行防御呢","children":[]},{"level":3,"title":"通过xss盗用cookie危害是什么？","slug":"通过xss盗用cookie危害是什么","link":"#通过xss盗用cookie危害是什么","children":[]},{"level":3,"title":"xss攻击和csrf攻击配合","slug":"xss攻击和csrf攻击配合","link":"#xss攻击和csrf攻击配合","children":[]},{"level":3,"title":"对于后端渲染HTML框架","slug":"对于后端渲染html框架","link":"#对于后端渲染html框架","children":[]},{"level":3,"title":"对于前端渲染HTML","slug":"对于前端渲染html","link":"#对于前端渲染html","children":[]},{"level":3,"title":"浏览器之间对xss处理有差异","slug":"浏览器之间对xss处理有差异","link":"#浏览器之间对xss处理有差异","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703584561000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":12.49,"words":3747},"filePathRelative":"develop/security/dev-security-x-xss.md","localizedDate":"2019年4月16日","excerpt":"<h1> 开发安全 - XSS 详解</h1>\\n<blockquote>\\n<p>XSS是跨站脚本攻击(Cross Site Scripting)，为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。</p>\\n</blockquote>\\n<h2> XSS 简介</h2>\\n<p>举一个简单的例子，就是留言板。我们知道留言板通常的任务就是把用户留言的内容展示出来。正常情况下，用户的留言都是正常的语言文字，留言板显示的内容也就没毛病。然而这个时候如果有人不按套路出牌，在留言内容中丢进去一行</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
