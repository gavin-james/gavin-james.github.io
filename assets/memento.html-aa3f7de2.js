const e=JSON.parse('{"key":"v-5aed6ba6","path":"/develop/design/memento.html","title":"行为型备忘录模式","lang":"zh-CN","frontmatter":{"title":"行为型备忘录模式","date":"2019-11-14T00:00:00.000Z","category":["设计模式"],"tag":["设计模式"],"description":"备忘录模式基本介绍 备忘录模式（Memento Pattern）又叫 快照模式，在 不破坏封装性的前提下，捕获 一个对象的内部状态，并在该对象之外保存这个状态。这样以后就 可将该对象恢复到原先保存的状态。 备忘录模式属于行为型模式。 可以这里理解备忘录模式：现实生活中的备忘录是用来记录某些要去做的事情，或者是记录已经达成的共同意见的事情，以防忘记了。而在软件层面，备忘录模式有着相同的含义，备忘录对象主要用来记录一个对象的某种状态，或者某些数据，当要做回退时，可以从备忘录对象里获取原来的数据进行恢复操作。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/design/memento.html"}],["meta",{"property":"og:site_name","content":"Gavin blog"}],["meta",{"property":"og:title","content":"行为型备忘录模式"}],["meta",{"property":"og:description","content":"备忘录模式基本介绍 备忘录模式（Memento Pattern）又叫 快照模式，在 不破坏封装性的前提下，捕获 一个对象的内部状态，并在该对象之外保存这个状态。这样以后就 可将该对象恢复到原先保存的状态。 备忘录模式属于行为型模式。 可以这里理解备忘录模式：现实生活中的备忘录是用来记录某些要去做的事情，或者是记录已经达成的共同意见的事情，以防忘记了。而在软件层面，备忘录模式有着相同的含义，备忘录对象主要用来记录一个对象的某种状态，或者某些数据，当要做回退时，可以从备忘录对象里获取原来的数据进行恢复操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-12T04:14:48.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2019-11-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-12T04:14:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"行为型备忘录模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-11-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-12T04:14:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"备忘录模式基本介绍","slug":"备忘录模式基本介绍","link":"#备忘录模式基本介绍","children":[]},{"level":2,"title":"备忘录模式的结构与实现","slug":"备忘录模式的结构与实现","link":"#备忘录模式的结构与实现","children":[]},{"level":2,"title":"游戏角色状态恢复问题","slug":"游戏角色状态恢复问题","link":"#游戏角色状态恢复问题","children":[]},{"level":2,"title":"传统方案解决游戏角色恢复","slug":"传统方案解决游戏角色恢复","link":"#传统方案解决游戏角色恢复","children":[]},{"level":2,"title":"备忘录模式解决游戏角色恢复","slug":"备忘录模式解决游戏角色恢复","link":"#备忘录模式解决游戏角色恢复","children":[]},{"level":2,"title":"备忘录模式的注意事项和细节","slug":"备忘录模式的注意事项和细节","link":"#备忘录模式的注意事项和细节","children":[]},{"level":2,"title":"备忘录模式的应用场景","slug":"备忘录模式的应用场景","link":"#备忘录模式的应用场景","children":[]}],"git":{"createdTime":1681272888000,"updatedTime":1681272888000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":5.62,"words":1685},"filePathRelative":"develop/design/memento.md","localizedDate":"2019年11月14日","excerpt":"<h2> 备忘录模式基本介绍</h2>\\n<p><strong>备忘录模式</strong>（Memento Pattern）又叫 <strong>快照模式</strong>，在 <strong>不破坏封装性的前提下</strong>，捕获 <strong>一个对象的内部状态</strong>，并在该对象之外保存这个状态。这样以后就 <strong>可将该对象恢复到原先保存的状态</strong>。</p>\\n<p>备忘录模式属于行为型模式。</p>\\n<p>可以这里理解备忘录模式：现实生活中的备忘录是用来记录某些要去做的事情，或者是记录已经达成的共同意见的事情，以防忘记了。而在软件层面，备忘录模式有着相同的含义，备忘录对象主要用来记录一个对象的某种状态，或者某些数据，当要做回退时，可以从备忘录对象里获取原来的数据进行恢复操作。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
