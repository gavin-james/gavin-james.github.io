import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as n,b as s,d as t,f as a}from"./app-pgelmVnX.js";const u={},i=a('<h1 id="安全算法-摘要算法" tabindex="-1"><a class="header-anchor" href="#安全算法-摘要算法" aria-hidden="true">#</a> 安全算法 - 摘要算法</h1><blockquote><p>本文主要介绍安全算法 - 摘要算法相关的内容。消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密，目前可以解密逆向的只有CRC32算法，只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。消息摘要算法不存在密钥的管理与分发问题，适合于分布式网络上使用。</p></blockquote><h2 id="摘要算法简介" tabindex="-1"><a class="header-anchor" href="#摘要算法简介" aria-hidden="true">#</a> 摘要算法简介</h2><ul><li>消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密</li><li>只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文</li><li>消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法</li><li>著名的摘要算法有RSA公司的MD5算法和SHA-1算法及其大量的变体</li></ul><h2 id="摘要算法特点" tabindex="-1"><a class="header-anchor" href="#摘要算法特点" aria-hidden="true">#</a> 摘要算法特点</h2><ul><li>无论输入的消息有多长，计算出来的消息摘要的长度总是固定的</li><li>消息摘要看起来是“伪随机的”。也就是说对相同的信息求摘要结果相同</li><li>消息轻微改变生成的摘要变化会很大</li><li>只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息，甚至根本就找不到任何与原信息相关的信息</li></ul><h2 id="摘要算法应用" tabindex="-1"><a class="header-anchor" href="#摘要算法应用" aria-hidden="true">#</a> 摘要算法应用</h2><p>消息摘要算法最常用的场景就是数字签名以及数据(密码)加密了。(一般平时做项目用的比较多的就是使用MD5对用户密码进行加密)</p><h2 id="何谓数字签名" tabindex="-1"><a class="header-anchor" href="#何谓数字签名" aria-hidden="true">#</a> 何谓数字签名</h2><p>数字签名主要用到了非对称密钥加密技术与数字摘要技术。数字签名技术是将摘要信息用发送者的私钥加密，与原文一起传送给接收者。接收者只有用发送者的公钥才能解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与解密的摘要信息对比。 如果相同，则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过.</p><p>因此数字签名能够验证信息的完整性。 数字签名是个加密的过程，数字签名验证是个解密的过程。</p><h2 id="常见消息-数字摘要算法" tabindex="-1"><a class="header-anchor" href="#常见消息-数字摘要算法" aria-hidden="true">#</a> 常见消息/数字摘要算法</h2>',12),k={id:"md5在新窗口打开",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#md5在新窗口打开","aria-hidden":"true"},"#",-1),d={href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},m=a(`<h4 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介:</h4><p>MD5的作用是让大容量信息在用数字签名软件签署私人密钥前被&quot;压缩&quot;成一种保密的格式 (也就是把一个任意长度的字节串变换成一定长的十六进制数字串)。</p><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点:</h4><ol><li><strong>压缩性</strong> : 任意长度的数据，算出的MD5值长度都是固定的。</li><li><strong>容易计算</strong> : 从原数据计算出MD5值很容易。</li><li><strong>抗修改性</strong> : 对原数据进行任何改动，哪怕只修改1个字节，所得到的MD5值都有很大区别。</li><li><strong>强抗碰撞</strong> : 已知原数据和其MD5值，想找到一个具有相同MD5值的数据(即伪造数据)是非常困难的。</li></ol><h4 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现:</h4><p>利用JDK提供java.security.MessageDigest类实现MD5算法:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>snailclimb<span class="token punctuation">.</span>ks<span class="token punctuation">.</span>securityAlgorithm</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MD5Demo</span> <span class="token punctuation">{</span>

    <span class="token comment">// test</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getMD5Code</span><span class="token punctuation">(</span><span class="token string">&quot;你若安好，便是晴天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">MD5Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// md5加密</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getMD5Code</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> md5Str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
        	<span class="token comment">//创建MD5算法消息摘要</span>
            <span class="token class-name">MessageDigest</span> md <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//生成的哈希值的字节数组</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> md5Bytes <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            md5Str <span class="token operator">=</span> <span class="token function">bytes2Hex</span><span class="token punctuation">(</span>md5Bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> md5Str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 2进制转16进制</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">bytes2Hex</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuffer</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                temp <span class="token operator">=</span> bytes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    temp <span class="token operator">+=</span> <span class="token number">256</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>6bab82679914f7cb480a120b532ffa80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意MessageDigest类的几个方法</strong> :</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">MessageDigest</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">String</span> algorithm<span class="token punctuation">)</span><span class="token comment">//返回实现指定摘要算法的MessageDigest对象</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">digest</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> input<span class="token punctuation">)</span><span class="token comment">//使用指定的字节数组对摘要执行最终更新，然后完成摘要计算。 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="不利用java提供的java-security-messagedigest类实现md5算法" tabindex="-1"><a class="header-anchor" href="#不利用java提供的java-security-messagedigest类实现md5算法" aria-hidden="true">#</a> 不利用Java提供的java.security.MessageDigest类实现MD5算法:</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>snailclimb<span class="token punctuation">.</span>ks<span class="token punctuation">.</span>securityAlgorithm</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MD5</span><span class="token punctuation">{</span>
    <span class="token comment">/*
    *四个链接变量
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">A</span><span class="token operator">=</span><span class="token number">0x67452301</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">B</span><span class="token operator">=</span><span class="token number">0xefcdab89</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">C</span><span class="token operator">=</span><span class="token number">0x98badcfe</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">D</span><span class="token operator">=</span><span class="token number">0x10325476</span><span class="token punctuation">;</span>
    <span class="token comment">/*
    *ABCD的临时变量
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">Atemp</span><span class="token punctuation">,</span><span class="token class-name">Btemp</span><span class="token punctuation">,</span><span class="token class-name">Ctemp</span><span class="token punctuation">,</span><span class="token class-name">Dtemp</span><span class="token punctuation">;</span>
     
    <span class="token comment">/*
    *常量ti
    *公式:floor(abs(sin(i+1))×(2pow32)
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">K</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token number">0xd76aa478</span><span class="token punctuation">,</span><span class="token number">0xe8c7b756</span><span class="token punctuation">,</span><span class="token number">0x242070db</span><span class="token punctuation">,</span><span class="token number">0xc1bdceee</span><span class="token punctuation">,</span>
        <span class="token number">0xf57c0faf</span><span class="token punctuation">,</span><span class="token number">0x4787c62a</span><span class="token punctuation">,</span><span class="token number">0xa8304613</span><span class="token punctuation">,</span><span class="token number">0xfd469501</span><span class="token punctuation">,</span><span class="token number">0x698098d8</span><span class="token punctuation">,</span>
        <span class="token number">0x8b44f7af</span><span class="token punctuation">,</span><span class="token number">0xffff5bb1</span><span class="token punctuation">,</span><span class="token number">0x895cd7be</span><span class="token punctuation">,</span><span class="token number">0x6b901122</span><span class="token punctuation">,</span><span class="token number">0xfd987193</span><span class="token punctuation">,</span>
        <span class="token number">0xa679438e</span><span class="token punctuation">,</span><span class="token number">0x49b40821</span><span class="token punctuation">,</span><span class="token number">0xf61e2562</span><span class="token punctuation">,</span><span class="token number">0xc040b340</span><span class="token punctuation">,</span><span class="token number">0x265e5a51</span><span class="token punctuation">,</span>
        <span class="token number">0xe9b6c7aa</span><span class="token punctuation">,</span><span class="token number">0xd62f105d</span><span class="token punctuation">,</span><span class="token number">0x02441453</span><span class="token punctuation">,</span><span class="token number">0xd8a1e681</span><span class="token punctuation">,</span><span class="token number">0xe7d3fbc8</span><span class="token punctuation">,</span>
        <span class="token number">0x21e1cde6</span><span class="token punctuation">,</span><span class="token number">0xc33707d6</span><span class="token punctuation">,</span><span class="token number">0xf4d50d87</span><span class="token punctuation">,</span><span class="token number">0x455a14ed</span><span class="token punctuation">,</span><span class="token number">0xa9e3e905</span><span class="token punctuation">,</span>
        <span class="token number">0xfcefa3f8</span><span class="token punctuation">,</span><span class="token number">0x676f02d9</span><span class="token punctuation">,</span><span class="token number">0x8d2a4c8a</span><span class="token punctuation">,</span><span class="token number">0xfffa3942</span><span class="token punctuation">,</span><span class="token number">0x8771f681</span><span class="token punctuation">,</span>
        <span class="token number">0x6d9d6122</span><span class="token punctuation">,</span><span class="token number">0xfde5380c</span><span class="token punctuation">,</span><span class="token number">0xa4beea44</span><span class="token punctuation">,</span><span class="token number">0x4bdecfa9</span><span class="token punctuation">,</span><span class="token number">0xf6bb4b60</span><span class="token punctuation">,</span>
        <span class="token number">0xbebfbc70</span><span class="token punctuation">,</span><span class="token number">0x289b7ec6</span><span class="token punctuation">,</span><span class="token number">0xeaa127fa</span><span class="token punctuation">,</span><span class="token number">0xd4ef3085</span><span class="token punctuation">,</span><span class="token number">0x04881d05</span><span class="token punctuation">,</span>
        <span class="token number">0xd9d4d039</span><span class="token punctuation">,</span><span class="token number">0xe6db99e5</span><span class="token punctuation">,</span><span class="token number">0x1fa27cf8</span><span class="token punctuation">,</span><span class="token number">0xc4ac5665</span><span class="token punctuation">,</span><span class="token number">0xf4292244</span><span class="token punctuation">,</span>
        <span class="token number">0x432aff97</span><span class="token punctuation">,</span><span class="token number">0xab9423a7</span><span class="token punctuation">,</span><span class="token number">0xfc93a039</span><span class="token punctuation">,</span><span class="token number">0x655b59c3</span><span class="token punctuation">,</span><span class="token number">0x8f0ccc92</span><span class="token punctuation">,</span>
        <span class="token number">0xffeff47d</span><span class="token punctuation">,</span><span class="token number">0x85845dd1</span><span class="token punctuation">,</span><span class="token number">0x6fa87e4f</span><span class="token punctuation">,</span><span class="token number">0xfe2ce6e0</span><span class="token punctuation">,</span><span class="token number">0xa3014314</span><span class="token punctuation">,</span>
        <span class="token number">0x4e0811a1</span><span class="token punctuation">,</span><span class="token number">0xf7537e82</span><span class="token punctuation">,</span><span class="token number">0xbd3af235</span><span class="token punctuation">,</span><span class="token number">0x2ad7d2bb</span><span class="token punctuation">,</span><span class="token number">0xeb86d391</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">/*
    *向左位移数,计算方法未知
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> s<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span>
        <span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token number">15</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
     
     
    <span class="token comment">/*
    *初始化函数
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Atemp</span><span class="token operator">=</span><span class="token class-name">A</span><span class="token punctuation">;</span>
        <span class="token class-name">Btemp</span><span class="token operator">=</span><span class="token class-name">B</span><span class="token punctuation">;</span>
        <span class="token class-name">Ctemp</span><span class="token operator">=</span><span class="token class-name">C</span><span class="token punctuation">;</span>
        <span class="token class-name">Dtemp</span><span class="token operator">=</span><span class="token class-name">D</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *移动一定位数
    */</span>
    <span class="token keyword">private</span>    <span class="token keyword">int</span>    <span class="token function">shift</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">(</span>a<span class="token operator">&lt;&lt;</span>s<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>a<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">-</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//右移的时候，高位一定要补零，而不是补充符号位</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *主循环
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token class-name">MainLoop</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">M</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token class-name">F</span><span class="token punctuation">,</span>g<span class="token punctuation">;</span>
        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token class-name">Atemp</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b<span class="token operator">=</span><span class="token class-name">Btemp</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c<span class="token operator">=</span><span class="token class-name">Ctemp</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> d<span class="token operator">=</span><span class="token class-name">Dtemp</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">F</span><span class="token operator">=</span><span class="token punctuation">(</span>b<span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>b<span class="token punctuation">)</span><span class="token operator">&amp;</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token operator">=</span>i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">F</span><span class="token operator">=</span><span class="token punctuation">(</span>d<span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>d<span class="token punctuation">)</span><span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">F</span><span class="token operator">=</span>b<span class="token operator">^</span>c<span class="token operator">^</span>d<span class="token punctuation">;</span>
                g<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token class-name">F</span><span class="token operator">=</span>c<span class="token operator">^</span><span class="token punctuation">(</span>b<span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">~</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                g<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">int</span> tmp<span class="token operator">=</span>d<span class="token punctuation">;</span>
            d<span class="token operator">=</span>c<span class="token punctuation">;</span>
            c<span class="token operator">=</span>b<span class="token punctuation">;</span>
            b<span class="token operator">=</span>b<span class="token operator">+</span><span class="token function">shift</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token class-name">F</span><span class="token operator">+</span><span class="token class-name">K</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token class-name">M</span><span class="token punctuation">[</span>g<span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            a<span class="token operator">=</span>tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Atemp</span><span class="token operator">=</span>a<span class="token operator">+</span><span class="token class-name">Atemp</span><span class="token punctuation">;</span>
        <span class="token class-name">Btemp</span><span class="token operator">=</span>b<span class="token operator">+</span><span class="token class-name">Btemp</span><span class="token punctuation">;</span>
        <span class="token class-name">Ctemp</span><span class="token operator">=</span>c<span class="token operator">+</span><span class="token class-name">Ctemp</span><span class="token punctuation">;</span>
        <span class="token class-name">Dtemp</span><span class="token operator">=</span>d<span class="token operator">+</span><span class="token class-name">Dtemp</span><span class="token punctuation">;</span>
     
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *填充函数
    *处理后应满足bits≡448(mod512),字节就是bytes≡56(mode64)
    *填充方式为先加一个0,其它位补零
    *最后加上64位的原来长度
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> num<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//以512位，64个字节为一组</span>
        <span class="token keyword">int</span> strByte<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>num<span class="token operator">*</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//64/4=16，所以有16个整数</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>num<span class="token operator">*</span><span class="token number">16</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//全部初始化0</span>
            strByte<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span>    i<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            strByte<span class="token punctuation">[</span>i<span class="token operator">&gt;&gt;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">|=</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一个整数存储四个字节，小端序</span>
        <span class="token punctuation">}</span>
        strByte<span class="token punctuation">[</span>i<span class="token operator">&gt;&gt;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">|=</span><span class="token number">0x80</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//尾部添加1</span>
        <span class="token comment">/*
        *添加原长度，长度指位的长度，所以要乘8，然后是小端序，所以放在倒数第二个,这里长度只用了32位
        */</span>
        strByte<span class="token punctuation">[</span>num<span class="token operator">*</span><span class="token number">16</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> strByte<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *调用函数
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMD5</span><span class="token punctuation">(</span><span class="token class-name">String</span> source<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> strByte<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">add</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>strByte<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">16</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> num<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            num<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>strByte<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">16</span><span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">MainLoop</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">changeHex</span><span class="token punctuation">(</span><span class="token class-name">Atemp</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">changeHex</span><span class="token punctuation">(</span><span class="token class-name">Btemp</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">changeHex</span><span class="token punctuation">(</span><span class="token class-name">Ctemp</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">changeHex</span><span class="token punctuation">(</span><span class="token class-name">Dtemp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *整数变成16进制字符串
    */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">changeHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> str<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            str<span class="token operator">+=</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%2s&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">&gt;&gt;</span>i<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    *单例
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">MD5</span> instance<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">MD5</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>instance<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            instance<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MD5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     
    <span class="token keyword">private</span> <span class="token function">MD5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
     
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> str<span class="token operator">=</span><span class="token constant">MD5</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMD5</span><span class="token punctuation">(</span><span class="token string">&quot;你若安好，便是晴天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),v={id:"sha1在新窗口打开",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#sha1在新窗口打开","aria-hidden":"true"},"#",-1),y={href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},g=a(`<p>对于长度小于2^64位的消息，SHA1会产生一个160位(40个字符)的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，那么这时候就会产生不同的消息摘要。</p><p>SHA1有如下特性:</p><ul><li>不可以从消息摘要中复原信息；</li><li>两个不同的消息不会产生同样的消息摘要,(但会有1x10 ^ 48分之一的机率出现相同的消息摘要,一般使用时忽略)。</li></ul><h4 id="代码实现-1" tabindex="-1"><a class="header-anchor" href="#代码实现-1" aria-hidden="true">#</a> 代码实现:</h4><p>利用JDK提供java.security.MessageDigest类实现SHA1算法:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>snailclimb<span class="token punctuation">.</span>ks<span class="token punctuation">.</span>securityAlgorithm</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SHA1Demo</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// TODO Auto-generated method stub</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getSha1</span><span class="token punctuation">(</span><span class="token string">&quot;你若安好，便是晴天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getSha1</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> str <span class="token operator">||</span> <span class="token number">0</span> <span class="token operator">==</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hexDigits <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;f&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">//创建SHA1算法消息摘要对象</span>
			<span class="token class-name">MessageDigest</span> mdTemp <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SHA1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//使用指定的字节数组更新摘要。</span>
			mdTemp<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//生成的哈希值的字节数组</span>
			<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> md <span class="token operator">=</span> mdTemp<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//SHA1算法生成信息摘要关键过程</span>
			<span class="token keyword">int</span> j <span class="token operator">=</span> md<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>j <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">byte</span> byte0 <span class="token operator">=</span> md<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				buf<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> hexDigits<span class="token punctuation">[</span>byte0 <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span> <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				buf<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> hexDigits<span class="token punctuation">[</span>byte0 <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
		
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结果</strong> :</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>8ce764110a42da9b08504b20e26b19c9e3382414
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8);function f(h,w){const p=o("ExternalLinkIcon");return c(),l("div",null,[i,n("h3",k,[r,s(),n("a",d,[s("MD5在新窗口打开"),t(p)])]),m,n("h3",v,[b,s(),n("a",y,[s("SHA1在新窗口打开"),t(p)])]),g])}const S=e(u,[["render",f],["__file","alg-domain-security-degist.html.vue"]]);export{S as default};
