const e=JSON.parse('{"key":"v-9ba68da0","path":"/java/thread/java-thread-x-thread-basic.html","title":"Java 并发 - 线程基础","lang":"zh-CN","frontmatter":{"date":"2022-02-22T00:00:00.000Z","category":["Java 多线程"],"tag":["Java 多线程"],"description":"Java 并发 - 线程基础 本文主要概要性的介绍线程的基础，为后面的章节深入介绍Java并发的知识提供基础。 带着BAT大厂的面试问题去理解 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解线程基础。 线程有哪几种状态? 分别说明从一种状态到另一种状态转变有哪些方式? 通常线程有哪几种使用方式? 基础线程机制有哪些? 线程的中断方式有哪些? 线程的互斥同步方式有哪些? 如何比较和选择? 线程之间有哪些协作方式?","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/java/thread/java-thread-x-thread-basic.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"Java 并发 - 线程基础"}],["meta",{"property":"og:description","content":"Java 并发 - 线程基础 本文主要概要性的介绍线程的基础，为后面的章节深入介绍Java并发的知识提供基础。 带着BAT大厂的面试问题去理解 提示 请带着这些问题继续后文，会很大程度上帮助你更好的理解线程基础。 线程有哪几种状态? 分别说明从一种状态到另一种状态转变有哪些方式? 通常线程有哪几种使用方式? 基础线程机制有哪些? 线程的中断方式有哪些? 线程的互斥同步方式有哪些? 如何比较和选择? 线程之间有哪些协作方式?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T08:42:25.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"Java 多线程"}],["meta",{"property":"article:published_time","content":"2022-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T08:42:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发 - 线程基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T08:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"带着BAT大厂的面试问题去理解","slug":"带着bat大厂的面试问题去理解","link":"#带着bat大厂的面试问题去理解","children":[]},{"level":2,"title":"线程状态转换","slug":"线程状态转换","link":"#线程状态转换","children":[{"level":3,"title":"新建(New)","slug":"新建-new","link":"#新建-new","children":[]},{"level":3,"title":"可运行(Runnable)","slug":"可运行-runnable","link":"#可运行-runnable","children":[]},{"level":3,"title":"阻塞(Blocking)","slug":"阻塞-blocking","link":"#阻塞-blocking","children":[]},{"level":3,"title":"无限期等待(Waiting)","slug":"无限期等待-waiting","link":"#无限期等待-waiting","children":[]},{"level":3,"title":"限期等待(Timed Waiting)","slug":"限期等待-timed-waiting","link":"#限期等待-timed-waiting","children":[]},{"level":3,"title":"死亡(Terminated)","slug":"死亡-terminated","link":"#死亡-terminated","children":[]}]},{"level":2,"title":"线程使用方式","slug":"线程使用方式","link":"#线程使用方式","children":[{"level":3,"title":"实现 Runnable 接口","slug":"实现-runnable-接口","link":"#实现-runnable-接口","children":[]},{"level":3,"title":"实现 Callable 接口","slug":"实现-callable-接口","link":"#实现-callable-接口","children":[]},{"level":3,"title":"继承 Thread 类","slug":"继承-thread-类","link":"#继承-thread-类","children":[]},{"level":3,"title":"实现接口 VS 继承 Thread","slug":"实现接口-vs-继承-thread","link":"#实现接口-vs-继承-thread","children":[]}]},{"level":2,"title":"基础线程机制","slug":"基础线程机制","link":"#基础线程机制","children":[{"level":3,"title":"Executor","slug":"executor","link":"#executor","children":[]},{"level":3,"title":"Daemon","slug":"daemon","link":"#daemon","children":[]},{"level":3,"title":"sleep()","slug":"sleep","link":"#sleep","children":[]},{"level":3,"title":"yield()","slug":"yield","link":"#yield","children":[]}]},{"level":2,"title":"线程中断","slug":"线程中断","link":"#线程中断","children":[{"level":3,"title":"InterruptedException","slug":"interruptedexception","link":"#interruptedexception","children":[]},{"level":3,"title":"interrupted()","slug":"interrupted","link":"#interrupted","children":[]},{"level":3,"title":"Executor 的中断操作","slug":"executor-的中断操作","link":"#executor-的中断操作","children":[]}]},{"level":2,"title":"线程互斥同步","slug":"线程互斥同步","link":"#线程互斥同步","children":[{"level":3,"title":"synchronized","slug":"synchronized","link":"#synchronized","children":[]},{"level":3,"title":"ReentrantLock","slug":"reentrantlock","link":"#reentrantlock","children":[]},{"level":3,"title":"比较","slug":"比较","link":"#比较","children":[]},{"level":3,"title":"使用选择","slug":"使用选择","link":"#使用选择","children":[]}]},{"level":2,"title":"线程之间的协作","slug":"线程之间的协作","link":"#线程之间的协作","children":[{"level":3,"title":"join()","slug":"join","link":"#join","children":[]},{"level":3,"title":"wait() notify() notifyAll()","slug":"wait-notify-notifyall","link":"#wait-notify-notifyall","children":[]},{"level":3,"title":"await() signal() signalAll()","slug":"await-signal-signalall","link":"#await-signal-signalall","children":[]}]}],"git":{"createdTime":1687917370000,"updatedTime":1703493745000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":11.57,"words":3472},"filePathRelative":"java/thread/java-thread-x-thread-basic.md","localizedDate":"2022年2月22日","excerpt":"<h1> Java 并发 - 线程基础</h1>\\n<blockquote>\\n<p>本文主要概要性的介绍线程的基础，为后面的章节深入介绍Java并发的知识提供基础。</p>\\n</blockquote>\\n<h2> 带着BAT大厂的面试问题去理解</h2>\\n<blockquote>\\n<p>提示</p>\\n<p>请带着这些问题继续后文，会很大程度上帮助你更好的理解线程基础。</p>\\n</blockquote>\\n<ul>\\n<li>线程有哪几种状态? 分别说明从一种状态到另一种状态转变有哪些方式?</li>\\n<li>通常线程有哪几种使用方式?</li>\\n<li>基础线程机制有哪些?</li>\\n<li>线程的中断方式有哪些?</li>\\n<li>线程的互斥同步方式有哪些? 如何比较和选择?</li>\\n<li>线程之间有哪些协作方式?</li>\\n</ul>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
