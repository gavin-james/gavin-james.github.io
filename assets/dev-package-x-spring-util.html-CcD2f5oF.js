import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as a,c as n,a as r,b as i,d as l,f as o}from"./app-IRwI16JE.js";const u={},g=o('<h1 id="常用开发库-spring常用工具类" tabindex="-1"><a class="header-anchor" href="#常用开发库-spring常用工具类" aria-hidden="true">#</a> 常用开发库 - Spring常用工具类</h1><blockquote><p>Spring作为常用的开发框架，在Spring框架应用中，排在ApacheCommon，Guava, Huool等通用库后，第二优先级可以考虑使用Spring-core-xxx.jar中的util包。（提醒读者：对于工具类，要站在高一点的角度知道有哪些，而不是只看到代码... 用的时候具体看下即可)</p></blockquote><h2 id="内置的resouce类型" tabindex="-1"><a class="header-anchor" href="#内置的resouce类型" aria-hidden="true">#</a> 内置的resouce类型</h2><ul><li>UrlResource</li><li>ClassPathResource</li><li>FileSystemResource</li><li>ServletContextResource</li><li>InputStreamResource</li><li>ByteArrayResource</li><li>EncodedResource 也就是Resource加上encoding, 可以认为是有编码的资源</li><li>VfsResource(在jboss里经常用到, 相应还有 工具类 VfsUtils)</li><li>org.springframework.util.xml.ResourceUtils 用于处理表达资源字符串前缀描述资源的工具. 如: &quot;classpath:&quot;. 有 getURL, getFile, isFileURL, isJarURL, extractJarFileURL</li></ul><h2 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类" aria-hidden="true">#</a> 工具类</h2>',5),c=r("li",null,"org.springframework.core.annotation.AnnotationUtils 处理注解",-1),p=r("li",null,[i("org.springframework.core.io.support.PathMatchingResourcePatternResolver 用 于处理 ant 匹配风格(com/"),r("em",null,".jsp, com/"),i("/.jsp),找出所有的资源, 结合上面的resource的概念一起使用,对于遍历文件很有用. 具体请详细查看javadoc")],-1),m=r("li",null,"org.springframework.core.io.support.PropertiesLoaderUtils 加载Properties资源工具类,和Resource结合",-1),d={href:"http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.4.5",target:"_blank",rel:"noopener noreferrer"},h=r("li",null,"org.springframework.core.GenericTypeResolver 范型分析器, 在用于对范型方法, 参数分析.",-1),f=r("li",null,"org.springframework.core.NestedExceptionUtils",-1),k=o('<h2 id="xml工具" tabindex="-1"><a class="header-anchor" href="#xml工具" aria-hidden="true">#</a> xml工具</h2><ul><li>org.springframework.util.xml.AbstractStaxContentHandler</li><li>org.springframework.util.xml.AbstractStaxXMLReader</li><li>org.springframework.util.xml.AbstractXMLReader</li><li>org.springframework.util.xml.AbstractXMLStreamReader</li><li>org.springframework.util.xml.DomUtils</li><li>org.springframework.util.xml.SimpleNamespaceContext</li><li>org.springframework.util.xml.SimpleSaxErrorHandler</li><li>org.springframework.util.xml.SimpleTransformErrorListener</li><li>org.springframework.util.xml.StaxUtils</li><li>org.springframework.util.xml.TransformerUtils</li></ul><h2 id="其它工具集" tabindex="-1"><a class="header-anchor" href="#其它工具集" aria-hidden="true">#</a> 其它工具集</h2><ul><li>org.springframework.util.AntPathMatcherant风格的处理</li><li>org.springframework.util.AntPathStringMatcher</li><li>org.springframework.util.Assert断言,在我们的参数判断时应该经常用</li><li>org.springframework.util.CachingMapDecorator</li><li>org.springframework.util.ClassUtils用于Class的处理</li><li>org.springframework.util.CollectionUtils用于处理集合的工具</li><li>org.springframework.util.CommonsLogWriter</li><li>org.springframework.util.CompositeIterator</li><li>org.springframework.util.ConcurrencyThrottleSupport</li><li>org.springframework.util.CustomizableThreadCreator</li><li>org.springframework.util.DefaultPropertiesPersister</li><li>org.springframework.util.DigestUtils摘要处理, 这里有用于md5处理信息的</li><li>org.springframework.util.FileCopyUtils文件的拷贝处理, 结合Resource的概念一起来处理, 真的是很方便</li><li>org.springframework.util.FileSystemUtils</li><li>org.springframework.util.LinkedCaseInsensitiveMap key值不区分大小写的LinkedMap</li><li>org.springframework.util.LinkedMultiValueMap一个key可以存放多个值的LinkedMap</li><li>org.springframework.util.Log4jConfigurer一个log4j的启动加载指定配制文件的工具类</li><li>org.springframework.util.NumberUtils处理数字的工具类, 有parseNumber 可以把字符串处理成我们指定的数字格式, 还支持format格式, convertNumberToTargetClass 可以实现Number类型的转化.</li><li>org.springframework.util.ObjectUtils有很多处理null object的方法. 如nullSafeHashCode, nullSafeEquals, isArray, containsElement, addObjectToArray, 等有用的方法</li><li>org.springframework.util.PatternMatchUtilsspring里用于处理简单的匹配. 如 Spring&#39;s typical &quot;xxx&quot;, &quot;xxx&quot; and &quot;xxx&quot; pattern styles</li><li>org.springframework.util.PropertyPlaceholderHelper用于处理占位符的替换</li><li>org.springframework.util.ReflectionUtils反映常用工具方法. 有 findField, setField, getField, findMethod, invokeMethod等有用的方法</li><li>org.springframework.util.SerializationUtils用于java的序列化与反序列化. serialize与deserialize方法</li><li>org.springframework.util.StopWatch一个很好的用于记录执行时间的工具类, 且可以用于任务分阶段的测试时间. 最后支持一个很好看的打印格式. 这个类应该经常用</li><li>org.springframework.util.StringUtils</li><li>org.springframework.util.SystemPropertyUtils</li><li>org.springframework.util.TypeUtils用于类型相容的判断. isAssignable</li><li>org.springframework.util.WeakReferenceMonitor弱引用的监控</li></ul><h2 id="和web相关的工具" tabindex="-1"><a class="header-anchor" href="#和web相关的工具" aria-hidden="true">#</a> 和web相关的工具</h2>',5),w=r("li",null,"org.springframework.web.util.CookieGenerator",-1),_=r("li",null,"org.springframework.web.util.HtmlCharacterEntityDecoder",-1),x=r("li",null,"org.springframework.web.util.HtmlCharacterEntityReferences",-1),b=r("li",null,"org.springframework.web.util.HtmlUtils",-1),U=r("li",null,"这个类用于用字符串模板构建url, 它会自动处理url里的汉字及其它相关的编码. 在读取别人提供的url资源时, 应该经常用",-1),S={href:"http://localhost/myapp/%7Bname%7D/%7Bid%7D",target:"_blank",rel:"noopener noreferrer"},R=r("li",null,"org.springframework.web.util.JavaScriptUtils",-1),C=r("li",null,[i("org.springframework.web.util.Log4jConfigListener "),r("ul",null,[r("li",null,"用listener的方式来配制log4j在web环境下的初始化")])],-1),y=r("li",null,"org.springframework.web.util.UriTemplate",-1),L=r("li",null,"org.springframework.web.util.UriUtils处理uri里特殊字符的编码",-1),v=r("li",null,"org.springframework.web.util.WebUtils",-1);function j(M,P){const e=s("ExternalLinkIcon");return a(),n("div",null,[g,r("ul",null,[c,p,m,r("li",null,[i("org.springframework.core.BridgeMethodResolver 桥接方法分析器. 关于桥接方法请参考: "),r("a",d,[i("http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.4.5"),l(e)])]),h,f]),k,r("ul",null,[w,_,x,b,r("li",null,[i("org.springframework.web.util.HttpUrlTemplate "),r("ul",null,[U,r("li",null,[i('String url = "'),r("a",S,[i("http://localhost/myapp/{name}/{id}"),l(e)]),i('";')])])]),R,C,y,L,v])])}const q=t(u,[["render",j],["__file","dev-package-x-spring-util.html.vue"]]);export{q as default};
