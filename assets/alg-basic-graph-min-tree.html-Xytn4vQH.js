const e=JSON.parse('{"key":"v-ca42b324","path":"/develop/algorithms-structures/alg-basic/alg-basic-graph-min-tree.html","title":"图 - 最小生成树(Prim & Kruskal)","lang":"zh-CN","frontmatter":{"date":"2019-06-26T00:00:00.000Z","category":["算法和数据结构"],"tag":["数据结构"],"description":"图 - 最小生成树(Prim &amp; Kruskal) Kruskal算法是从最小权重边着手，将森林里的树逐渐合并；prim算法是从顶点出发，在根结点的基础上建起一棵树。 最小生成树相关名词 连通图: 在无向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该无向图为连通图。 强连通图: 在有向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该有向图为强连通图。 连通网: 在连通图中，若图的边具有一定的意义，每一条边都对应着一个数，称为权；权代表着连接连个顶点的代价，称这种连通图叫做连通网。 生成树: 一个连通图的生成树是指一个连通子图，它含有图中全部n个顶点，但只有足以构成一棵树的n-1条边。一颗有n个顶点的生成树有且仅有n-1条边，如果生成树中再添加一条边，则必定成环。 最小生成树: 在连通网的所有生成树中，所有边的代价和最小的生成树，称为最小生成树。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-basic/alg-basic-graph-min-tree.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"图 - 最小生成树(Prim & Kruskal)"}],["meta",{"property":"og:description","content":"图 - 最小生成树(Prim &amp; Kruskal) Kruskal算法是从最小权重边着手，将森林里的树逐渐合并；prim算法是从顶点出发，在根结点的基础上建起一棵树。 最小生成树相关名词 连通图: 在无向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该无向图为连通图。 强连通图: 在有向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该有向图为强连通图。 连通网: 在连通图中，若图的边具有一定的意义，每一条边都对应着一个数，称为权；权代表着连接连个顶点的代价，称这种连通图叫做连通网。 生成树: 一个连通图的生成树是指一个连通子图，它含有图中全部n个顶点，但只有足以构成一棵树的n-1条边。一颗有n个顶点的生成树有且仅有n-1条边，如果生成树中再添加一条边，则必定成环。 最小生成树: 在连通网的所有生成树中，所有边的代价和最小的生成树，称为最小生成树。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2019-06-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"图 - 最小生成树(Prim & Kruskal)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"最小生成树相关名词","slug":"最小生成树相关名词","link":"#最小生成树相关名词","children":[]},{"level":2,"title":"最小生成树算法","slug":"最小生成树算法","link":"#最小生成树算法","children":[{"level":3,"title":"Kruskal算法","slug":"kruskal算法","link":"#kruskal算法","children":[]},{"level":3,"title":"Prim算法","slug":"prim算法","link":"#prim算法","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":2.76,"words":828},"filePathRelative":"develop/algorithms-structures/alg-basic/alg-basic-graph-min-tree.md","localizedDate":"2019年6月26日","excerpt":"<h1> 图 - 最小生成树(Prim &amp; Kruskal)</h1>\\n<blockquote>\\n<p>Kruskal算法是从最小权重边着手，将森林里的树逐渐合并；prim算法是从顶点出发，在根结点的基础上建起一棵树。</p>\\n</blockquote>\\n<h2> 最小生成树相关名词</h2>\\n<ul>\\n<li><code>连通图</code>: 在无向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该无向图为连通图。</li>\\n<li><code>强连通图</code>: 在有向图中，若任意两个顶点vivi与vjvj都有路径相通，则称该有向图为强连通图。</li>\\n<li><code>连通网</code>: 在连通图中，若图的边具有一定的意义，每一条边都对应着一个数，称为权；权代表着连接连个顶点的代价，称这种连通图叫做连通网。</li>\\n<li><code>生成树</code>: 一个连通图的生成树是指一个连通子图，它含有图中全部n个顶点，但只有足以构成一棵树的n-1条边。一颗有n个顶点的生成树有且仅有n-1条边，如果生成树中再添加一条边，则必定成环。</li>\\n<li><code>最小生成树</code>: 在连通网的所有生成树中，所有边的代价和最小的生成树，称为最小生成树。</li>\\n</ul>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
