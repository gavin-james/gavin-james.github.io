const e=JSON.parse('{"key":"v-1a357338","path":"/develop/algorithms-structures/alg-domain/alg-domain-distribute-x-consistency-hash.html","title":"分布式算法 - 一致性Hash算法","lang":"zh-CN","frontmatter":{"date":"2019-08-03T00:00:00.000Z","category":["算法和数据结构"],"tag":["领域算法"],"description":"分布式算法 - 一致性Hash算法 一致性Hash算法是个经典算法，Hash环的引入是为解决单调性(Monotonicity)的问题；虚拟节点的引入是为了解决平衡性(Balance)问题。 一致性Hash算法引入 在分布式集群中，对机器的添加删除，或者机器故障后自动脱离集群这些操作是分布式集群管理最基本的功能。如果采用常用的hash(object)%N算法，那么在有机器添加或者删除后，很多原有的数据就无法找到了，这样严重的违反了单调性原则。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/algorithms-structures/alg-domain/alg-domain-distribute-x-consistency-hash.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"分布式算法 - 一致性Hash算法"}],["meta",{"property":"og:description","content":"分布式算法 - 一致性Hash算法 一致性Hash算法是个经典算法，Hash环的引入是为解决单调性(Monotonicity)的问题；虚拟节点的引入是为了解决平衡性(Balance)问题。 一致性Hash算法引入 在分布式集群中，对机器的添加删除，或者机器故障后自动脱离集群这些操作是分布式集群管理最基本的功能。如果采用常用的hash(object)%N算法，那么在有机器添加或者删除后，很多原有的数据就无法找到了，这样严重的违反了单调性原则。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"领域算法"}],["meta",{"property":"article:published_time","content":"2019-08-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式算法 - 一致性Hash算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"一致性Hash算法引入","slug":"一致性hash算法引入","link":"#一致性hash算法引入","children":[]},{"level":2,"title":"一致性Hash算法简介","slug":"一致性hash算法简介","link":"#一致性hash算法简介","children":[]},{"level":2,"title":"一致性Hash算法","slug":"一致性hash算法","link":"#一致性hash算法","children":[{"level":3,"title":"Hash环","slug":"hash环","link":"#hash环","children":[]},{"level":3,"title":"删除节点","slug":"删除节点","link":"#删除节点","children":[]},{"level":3,"title":"增加节点","slug":"增加节点","link":"#增加节点","children":[]},{"level":3,"title":"不平衡的问题","slug":"不平衡的问题","link":"#不平衡的问题","children":[]},{"level":3,"title":"虚拟节点","slug":"虚拟节点","link":"#虚拟节点","children":[]}]},{"level":2,"title":"一致性Hash的应用","slug":"一致性hash的应用","link":"#一致性hash的应用","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1703667311000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":1}]},"readingTime":{"minutes":6.82,"words":2045},"filePathRelative":"develop/algorithms-structures/alg-domain/alg-domain-distribute-x-consistency-hash.md","localizedDate":"2019年8月3日","excerpt":"<h1> 分布式算法 - 一致性Hash算法</h1>\\n<blockquote>\\n<p>一致性Hash算法是个经典算法，Hash环的引入是为解决<code>单调性(Monotonicity)</code>的问题；虚拟节点的引入是为了解决<code>平衡性(Balance)</code>问题。</p>\\n</blockquote>\\n<h2> 一致性Hash算法引入</h2>\\n<p>在分布式集群中，对机器的添加删除，或者机器故障后自动脱离集群这些操作是分布式集群管理最基本的功能。如果采用常用的hash(object)%N算法，那么在有机器添加或者删除后，很多原有的数据就无法找到了，这样严重的违反了单调性原则。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
