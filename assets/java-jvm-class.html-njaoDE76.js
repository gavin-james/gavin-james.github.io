const a=JSON.parse('{"key":"v-d2220394","path":"/java/jvm/java-jvm-class.html","title":"JVM 基础 - 类字节码详解","lang":"zh-CN","frontmatter":{"date":"2022-04-27T00:00:00.000Z","category":["Java JVM"],"tag":["Java JVM"],"description":"JVM 基础 - 类字节码详解 源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行。 多语言编译为字节码在JVM运行 计算机是不能直接运行java代码的，必须要先运行java虚拟机，再由java虚拟机运行编译后的java代码。这个编译后的java代码，就是本文要介绍的java字节码。 为什么jvm不能直接运行java代码呢，这是因为在cpu层面看来计算机中所有的操作都是一个个指令的运行汇集而成的，java是高级语言，只有人类才能理解其逻辑，计算机是无法识别的，所以java代码必须要先编译成字节码文件，jvm才能正确识别代码转换后的指令并将其运行。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/java/jvm/java-jvm-class.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"JVM 基础 - 类字节码详解"}],["meta",{"property":"og:description","content":"JVM 基础 - 类字节码详解 源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行。 多语言编译为字节码在JVM运行 计算机是不能直接运行java代码的，必须要先运行java虚拟机，再由java虚拟机运行编译后的java代码。这个编译后的java代码，就是本文要介绍的java字节码。 为什么jvm不能直接运行java代码呢，这是因为在cpu层面看来计算机中所有的操作都是一个个指令的运行汇集而成的，java是高级语言，只有人类才能理解其逻辑，计算机是无法识别的，所以java代码必须要先编译成字节码文件，jvm才能正确识别代码转换后的指令并将其运行。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T08:42:25.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"Java JVM"}],["meta",{"property":"article:published_time","content":"2022-04-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T08:42:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM 基础 - 类字节码详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T08:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"多语言编译为字节码在JVM运行","slug":"多语言编译为字节码在jvm运行","link":"#多语言编译为字节码在jvm运行","children":[]},{"level":2,"title":"Java字节码文件","slug":"java字节码文件","link":"#java字节码文件","children":[{"level":3,"title":"Class文件的结构属性","slug":"class文件的结构属性","link":"#class文件的结构属性","children":[]},{"level":3,"title":"从一个例子开始","slug":"从一个例子开始","link":"#从一个例子开始","children":[]},{"level":3,"title":"反编译字节码文件","slug":"反编译字节码文件","link":"#反编译字节码文件","children":[]},{"level":3,"title":"字节码文件信息","slug":"字节码文件信息","link":"#字节码文件信息","children":[]},{"level":3,"title":"常量池","slug":"常量池","link":"#常量池","children":[]},{"level":3,"title":"方法表集合","slug":"方法表集合","link":"#方法表集合","children":[]},{"level":3,"title":"类名","slug":"类名","link":"#类名","children":[]}]},{"level":2,"title":"再看两个示例","slug":"再看两个示例","link":"#再看两个示例","children":[{"level":3,"title":"分析try-catch-finally","slug":"分析try-catch-finally","link":"#分析try-catch-finally","children":[]},{"level":3,"title":"kotlin 函数扩展的实现","slug":"kotlin-函数扩展的实现","link":"#kotlin-函数扩展的实现","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1687917370000,"updatedTime":1703493745000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":13.82,"words":4147},"filePathRelative":"java/jvm/java-jvm-class.md","localizedDate":"2022年4月27日","excerpt":"<h1> JVM 基础 - 类字节码详解</h1>\\n<blockquote>\\n<p>源代码通过编译器编译为字节码，再通过类加载子系统进行加载到JVM中运行。</p>\\n</blockquote>\\n<h2> 多语言编译为字节码在JVM运行</h2>\\n<p>计算机是不能直接运行java代码的，必须要先运行java虚拟机，再由java虚拟机运行编译后的java代码。这个编译后的java代码，就是本文要介绍的java字节码。</p>\\n<p>为什么jvm不能直接运行java代码呢，这是因为在cpu层面看来计算机中所有的操作都是一个个指令的运行汇集而成的，java是高级语言，只有人类才能理解其逻辑，计算机是无法识别的，所以java代码必须要先编译成字节码文件，jvm才能正确识别代码转换后的指令并将其运行。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{a as data};
