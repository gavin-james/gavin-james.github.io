const e=JSON.parse('{"key":"v-dbe78e54","path":"/develop/dev-agile/dev-th-waterfall-model.html","title":"传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等）","lang":"zh-CN","frontmatter":{"date":"2019-06-02T00:00:00.000Z","category":["开发流程"],"tag":["开发流程"],"description":"传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等） 软件生命周期(Software Life Cycle,SLC)是软件的产生直到报废或停止使用的生命周期。软件生命周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级等阶段。那么如何将上述软件开发过程方法化呢？这就是过程模型。过程模型（Process Models） 意图解决软件过程中的混乱，将软件开发过程中的沟通、计划、建模、构建和部署等活动（activities）有效地组织了起来。他们之间的线性（linear）、迭代（iterative）、演进（evolutionary）和平行（parallel）关系会产生不同的模型。常见的过程模型包括：瀑布模型、原型模型、增量模型、螺旋模型等。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/develop/dev-agile/dev-th-waterfall-model.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等）"}],["meta",{"property":"og:description","content":"传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等） 软件生命周期(Software Life Cycle,SLC)是软件的产生直到报废或停止使用的生命周期。软件生命周期内有问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级等阶段。那么如何将上述软件开发过程方法化呢？这就是过程模型。过程模型（Process Models） 意图解决软件过程中的混乱，将软件开发过程中的沟通、计划、建模、构建和部署等活动（activities）有效地组织了起来。他们之间的线性（linear）、迭代（iterative）、演进（evolutionary）和平行（parallel）关系会产生不同的模型。常见的过程模型包括：瀑布模型、原型模型、增量模型、螺旋模型等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-27T08:55:11.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"开发流程"}],["meta",{"property":"article:published_time","content":"2019-06-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-27T08:55:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-27T08:55:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"软件开发生命周期","slug":"软件开发生命周期","link":"#软件开发生命周期","children":[{"level":3,"title":"软件生命周期的六个阶段","slug":"软件生命周期的六个阶段","link":"#软件生命周期的六个阶段","children":[]}]},{"level":2,"title":"常见模型","slug":"常见模型","link":"#常见模型","children":[{"level":3,"title":"瀑布模型","slug":"瀑布模型","link":"#瀑布模型","children":[]},{"level":3,"title":"原型模型","slug":"原型模型","link":"#原型模型","children":[]},{"level":3,"title":"螺旋模型","slug":"螺旋模型","link":"#螺旋模型","children":[]},{"level":3,"title":"增量模型","slug":"增量模型","link":"#增量模型","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703667311000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":17.58,"words":5274},"filePathRelative":"develop/dev-agile/dev-th-waterfall-model.md","localizedDate":"2019年6月2日","excerpt":"<h1> 传统模式 - 软件开发生命周期与过程模型(瀑布模型，原型模型和螺旋模型等）</h1>\\n<blockquote>\\n<p>软件生命周期(Software Life Cycle,SLC)是软件的产生直到报废或停止使用的生命周期。软件生命周期内有<strong>问题定义、可行性分析、总体描述、系统设计、编码、调试和测试、验收与运行、维护升级</strong>等阶段。那么如何将上述软件开发过程方法化呢？这就是过程模型。过程模型（Process Models） 意图解决软件过程中的混乱，将软件开发过程中的沟通、计划、建模、构建和部署等活动（activities）有效地组织了起来。<strong>他们之间的线性（linear）、迭代（iterative）、演进（evolutionary）和平行（parallel）关系会产生不同的模型</strong>。常见的过程模型包括：瀑布模型、原型模型、增量模型、螺旋模型等。</p>\\n</blockquote>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
