const e=JSON.parse('{"key":"v-41f8b388","path":"/db/nosql-redis/db-redis-x-rdb-aof.html","title":"Redis进阶 - 持久化：RDB和AOF机制详解","lang":"zh-CN","frontmatter":{"date":"2022-06-17T00:00:00.000Z","category":["NoSQL Redis"],"tag":["NoSQL Redis"],"description":"Redis进阶 - 持久化：RDB和AOF机制详解 为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式。 Redis持久化简介 从两个点，我们来了解下Redis持久化 为什么需要持久化？ Redis是个基于内存的数据库。那服务一旦宕机，内存中的数据将全部丢失。通常的解决方案是从后端数据库恢复这些数据，但后端数据库有性能瓶颈，如果是大数据量的恢复，1、会对数据库带来巨大的压力，2、数据库的性能不如Redis。导致程序响应慢。所以对Redis来说，实现数据的持久化，避免从后端数据库中恢复数据，是至关重要的。","head":[["meta",{"property":"og:url","content":"http://www.gavin-james.com/db/nosql-redis/db-redis-x-rdb-aof.html"}],["meta",{"property":"og:site_name","content":"Gavin James"}],["meta",{"property":"og:title","content":"Redis进阶 - 持久化：RDB和AOF机制详解"}],["meta",{"property":"og:description","content":"Redis进阶 - 持久化：RDB和AOF机制详解 为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式。 Redis持久化简介 从两个点，我们来了解下Redis持久化 为什么需要持久化？ Redis是个基于内存的数据库。那服务一旦宕机，内存中的数据将全部丢失。通常的解决方案是从后端数据库恢复这些数据，但后端数据库有性能瓶颈，如果是大数据量的恢复，1、会对数据库带来巨大的压力，2、数据库的性能不如Redis。导致程序响应慢。所以对Redis来说，实现数据的持久化，避免从后端数据库中恢复数据，是至关重要的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-26T08:34:19.000Z"}],["meta",{"property":"article:author","content":"gavin-james"}],["meta",{"property":"article:tag","content":"NoSQL Redis"}],["meta",{"property":"article:published_time","content":"2022-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-26T08:34:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis进阶 - 持久化：RDB和AOF机制详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-26T08:34:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gavin-james\\",\\"url\\":\\"http://www.gavin-james.xyz\\"}]}"]]},"headers":[{"level":2,"title":"Redis持久化简介","slug":"redis持久化简介","link":"#redis持久化简介","children":[]},{"level":2,"title":"RDB 持久化","slug":"rdb-持久化","link":"#rdb-持久化","children":[{"level":3,"title":"触发方式","slug":"触发方式","link":"#触发方式","children":[]},{"level":3,"title":"redis.conf中配置RDB","slug":"redis-conf中配置rdb","link":"#redis-conf中配置rdb","children":[]},{"level":3,"title":"RDB 更深入理解","slug":"rdb-更深入理解","link":"#rdb-更深入理解","children":[]},{"level":3,"title":"RDB优缺点","slug":"rdb优缺点","link":"#rdb优缺点","children":[]}]},{"level":2,"title":"AOF 持久化","slug":"aof-持久化","link":"#aof-持久化","children":[{"level":3,"title":"如何实现AOF","slug":"如何实现aof","link":"#如何实现aof","children":[]},{"level":3,"title":"redis.conf中配置AOF","slug":"redis-conf中配置aof","link":"#redis-conf中配置aof","children":[]},{"level":3,"title":"深入理解AOF重写","slug":"深入理解aof重写","link":"#深入理解aof重写","children":[]}]},{"level":2,"title":"RDB和AOF混合方式（4.0版本)","slug":"rdb和aof混合方式-4-0版本","link":"#rdb和aof混合方式-4-0版本","children":[]},{"level":2,"title":"从持久化中恢复数据","slug":"从持久化中恢复数据","link":"#从持久化中恢复数据","children":[]},{"level":2,"title":"性能与实践","slug":"性能与实践","link":"#性能与实践","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1690160698000,"updatedTime":1703579659000,"contributors":[{"name":"gavin-james","email":"meaganlindesy1258@gmail.com","commits":2}]},"readingTime":{"minutes":24.94,"words":7482},"filePathRelative":"db/nosql-redis/db-redis-x-rdb-aof.md","localizedDate":"2022年6月17日","excerpt":"<h1> Redis进阶 - 持久化：RDB和AOF机制详解</h1>\\n<blockquote>\\n<p>为了防止数据丢失以及服务重启时能够恢复数据，Redis支持数据的持久化，主要分为两种方式，分别是RDB和AOF; 当然实际场景下还会使用这两种的混合模式。</p>\\n</blockquote>\\n<h2> Redis持久化简介</h2>\\n<blockquote>\\n<p>从两个点，我们来了解下Redis持久化</p>\\n</blockquote>\\n<ul>\\n<li><strong>为什么需要持久化</strong>？</li>\\n</ul>\\n<p>Redis是个基于内存的数据库。那服务一旦宕机，内存中的数据将全部丢失。通常的解决方案是从后端数据库恢复这些数据，但后端数据库有性能瓶颈，如果是大数据量的恢复，1、会对数据库带来巨大的压力，2、数据库的性能不如Redis。导致程序响应慢。所以对Redis来说，实现数据的持久化，避免从后端数据库中恢复数据，是至关重要的。</p>","copyright":{"author":"gavin-james","license":"https://github.com/gavin-james/gavin-james.github.io/LICENSE"},"autoDesc":true}');export{e as data};
