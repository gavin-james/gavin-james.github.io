export const data = JSON.parse("{\"key\":\"v-660b0285\",\"path\":\"/develop/design/iterator.html\",\"title\":\"行为型迭代器模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"行为型迭代器模式\",\"date\":\"2019-11-08T00:00:00.000Z\",\"category\":[\"设计模式\"],\"tag\":[\"设计模式\"],\"description\":\"迭代器模式基本介绍 迭代器模式在生活中应用的比较广泛，比如：物流系统中的传送带，不管传送的是什么物品，都会被打包成一个个箱子，并且有一个统一的二维码。这样我们不需要关心箱子里是什么，在分发时只需要一个个检查发送的目的地即可。再比如，我们平时乘坐交通工具，都是统一刷卡或者刷脸进站，而不需要关心是男性还是女性、是残疾人还是正常人等信息。 迭代器模式（Iterator Pattern）是常用的设计模式，属于行为型模式。 如果我们的集合元素是用不同的方式实现的，有数组，还有 Java 的集合类，或者还有其他方式，当客户端要遍历这些集合元素的时候就要使用多种遍历方式，而且还会暴露元素的内部结构，可以考虑使用迭代器模式解决。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://www.gavin-james.com/develop/design/iterator.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Gavin blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"行为型迭代器模式\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"迭代器模式基本介绍 迭代器模式在生活中应用的比较广泛，比如：物流系统中的传送带，不管传送的是什么物品，都会被打包成一个个箱子，并且有一个统一的二维码。这样我们不需要关心箱子里是什么，在分发时只需要一个个检查发送的目的地即可。再比如，我们平时乘坐交通工具，都是统一刷卡或者刷脸进站，而不需要关心是男性还是女性、是残疾人还是正常人等信息。 迭代器模式（Iterator Pattern）是常用的设计模式，属于行为型模式。 如果我们的集合元素是用不同的方式实现的，有数组，还有 Java 的集合类，或者还有其他方式，当客户端要遍历这些集合元素的时候就要使用多种遍历方式，而且还会暴露元素的内部结构，可以考虑使用迭代器模式解决。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"gavin-james\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"设计模式\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-11-08T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"行为型迭代器模式\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2019-11-08T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"gavin-james\\\",\\\"url\\\":\\\"http://www.gavin-james.xyz\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"迭代器模式基本介绍\",\"slug\":\"迭代器模式基本介绍\",\"link\":\"#迭代器模式基本介绍\",\"children\":[]},{\"level\":2,\"title\":\"迭代器模式的结构与实现\",\"slug\":\"迭代器模式的结构与实现\",\"link\":\"#迭代器模式的结构与实现\",\"children\":[]},{\"level\":2,\"title\":\"迭代器模式应用实例\",\"slug\":\"迭代器模式应用实例\",\"link\":\"#迭代器模式应用实例\",\"children\":[]},{\"level\":2,\"title\":\"JDK-ArrayList 的迭代器模式剖析\",\"slug\":\"jdk-arraylist-的迭代器模式剖析\",\"link\":\"#jdk-arraylist-的迭代器模式剖析\",\"children\":[]},{\"level\":2,\"title\":\"迭代器模式的注意事项和细节\",\"slug\":\"迭代器模式的注意事项和细节\",\"link\":\"#迭代器模式的注意事项和细节\",\"children\":[]},{\"level\":2,\"title\":\"迭代器模式的应用场景\",\"slug\":\"迭代器模式的应用场景\",\"link\":\"#迭代器模式的应用场景\",\"children\":[]}],\"readingTime\":{\"minutes\":7.41,\"words\":2222},\"filePathRelative\":\"develop/design/iterator.md\",\"localizedDate\":\"2019年11月8日\",\"excerpt\":\"<h2> 迭代器模式基本介绍</h2>\\n<p>迭代器模式在生活中应用的比较广泛，比如：物流系统中的传送带，不管传送的是什么物品，都会被打包成一个个箱子，并且有一个统一的二维码。这样我们不需要关心箱子里是什么，在分发时只需要一个个检查发送的目的地即可。再比如，我们平时乘坐交通工具，都是统一刷卡或者刷脸进站，而不需要关心是男性还是女性、是残疾人还是正常人等信息。</p>\\n<p><strong>迭代器模式</strong>（Iterator Pattern）是常用的设计模式，属于行为型模式。</p>\\n<p>如果我们的集合元素是用不同的方式实现的，有数组，还有 Java 的集合类，或者还有其他方式，当客户端要遍历这些集合元素的时候就要使用多种遍历方式，而且还会暴露元素的内部结构，可以考虑使用迭代器模式解决。</p>\",\"copyright\":{\"author\":\"gavin-james\",\"license\":\"https://github.com/gavin-james/gavin-james.github.io/LICENSE\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
