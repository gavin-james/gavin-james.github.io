export const data = JSON.parse("{\"key\":\"v-c75e9552\",\"path\":\"/java/basic/lan-sum.html\",\"title\":\"图谱 & Q/A\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"图谱 &amp; Q/A 本文主要对Java基础知识体系小结，同时结合一些Q&amp;A进行理解。 @pdai 参考文档 Thinking in Java (Java 编程思想) Gitbook中文文档 https://java.quanke.name/ Thinking in Java (Java 编程思想) Github https://github.com/quanke/think-in-java Thinking in Java (Java 编程思想) Gitbook2 https://www.gitbook.com/book/wizardforcel/thinking-in-java/details\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://www.gavin-james.com/java/basic/lan-sum.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Gavin James\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"图谱 & Q/A\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"图谱 &amp; Q/A 本文主要对Java基础知识体系小结，同时结合一些Q&amp;A进行理解。 @pdai 参考文档 Thinking in Java (Java 编程思想) Gitbook中文文档 https://java.quanke.name/ Thinking in Java (Java 编程思想) Github https://github.com/quanke/think-in-java Thinking in Java (Java 编程思想) Gitbook2 https://www.gitbook.com/book/wizardforcel/thinking-in-java/details\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"gavin-james\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"图谱 & Q/A\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"gavin-james\\\",\\\"url\\\":\\\"http://www.gavin-james.xyz\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"参考文档\",\"slug\":\"参考文档\",\"link\":\"#参考文档\",\"children\":[]},{\"level\":2,\"title\":\"知识体系\",\"slug\":\"知识体系\",\"link\":\"#知识体系\",\"children\":[]},{\"level\":2,\"title\":\"Q&A\",\"slug\":\"q-a\",\"link\":\"#q-a\",\"children\":[{\"level\":3,\"title\":\"Java 中应该使用什么数据类型来代表价格?\",\"slug\":\"java-中应该使用什么数据类型来代表价格\",\"link\":\"#java-中应该使用什么数据类型来代表价格\",\"children\":[]},{\"level\":3,\"title\":\"怎么将 byte 转换为 String?\",\"slug\":\"怎么将-byte-转换为-string\",\"link\":\"#怎么将-byte-转换为-string\",\"children\":[]},{\"level\":3,\"title\":\"Java 中怎样将 bytes 转换为 long 类型?\",\"slug\":\"java-中怎样将-bytes-转换为-long-类型\",\"link\":\"#java-中怎样将-bytes-转换为-long-类型\",\"children\":[]},{\"level\":3,\"title\":\"我们能将 int 强制转换为 byte 类型的变量吗? 如果该值大于 byte 类型的范围，将会出现什么现象?\",\"slug\":\"我们能将-int-强制转换为-byte-类型的变量吗-如果该值大于-byte-类型的范围-将会出现什么现象\",\"link\":\"#我们能将-int-强制转换为-byte-类型的变量吗-如果该值大于-byte-类型的范围-将会出现什么现象\",\"children\":[]},{\"level\":3,\"title\":\"存在两个类，B 继承 A，C 继承 B，我们能将 B 转换为 C 么? 如 C = (C) B；\",\"slug\":\"存在两个类-b-继承-a-c-继承-b-我们能将-b-转换为-c-么-如-c-c-b\",\"link\":\"#存在两个类-b-继承-a-c-继承-b-我们能将-b-转换为-c-么-如-c-c-b\",\"children\":[]},{\"level\":3,\"title\":\"哪个类包含 clone 方法? 是 Cloneable 还是 Object?\",\"slug\":\"哪个类包含-clone-方法-是-cloneable-还是-object\",\"link\":\"#哪个类包含-clone-方法-是-cloneable-还是-object\",\"children\":[]},{\"level\":3,\"title\":\"Java 中 ++ 操作符是线程安全的吗?\",\"slug\":\"java-中-操作符是线程安全的吗\",\"link\":\"#java-中-操作符是线程安全的吗\",\"children\":[]},{\"level\":3,\"title\":\"a = a + b 与 a += b 的区别\",\"slug\":\"a-a-b-与-a-b-的区别\",\"link\":\"#a-a-b-与-a-b-的区别\",\"children\":[]},{\"level\":3,\"title\":\"我能在不进行强制转换的情况下将一个 double 值赋值给 long 类型的变量吗?\",\"slug\":\"我能在不进行强制转换的情况下将一个-double-值赋值给-long-类型的变量吗\",\"link\":\"#我能在不进行强制转换的情况下将一个-double-值赋值给-long-类型的变量吗\",\"children\":[]},{\"level\":3,\"title\":\"3*0.1 == 0.3 将会返回什么? true 还是 false?\",\"slug\":\"_3-0-1-0-3-将会返回什么-true-还是-false\",\"link\":\"#_3-0-1-0-3-将会返回什么-true-还是-false\",\"children\":[]},{\"level\":3,\"title\":\"int 和 Integer 哪个会占用更多的内存?\",\"slug\":\"int-和-integer-哪个会占用更多的内存\",\"link\":\"#int-和-integer-哪个会占用更多的内存\",\"children\":[]},{\"level\":3,\"title\":\"为什么 Java 中的 String 是不可变的(Immutable)?\",\"slug\":\"为什么-java-中的-string-是不可变的-immutable\",\"link\":\"#为什么-java-中的-string-是不可变的-immutable\",\"children\":[]},{\"level\":3,\"title\":\"我们能在 Switch 中使用 String 吗?\",\"slug\":\"我们能在-switch-中使用-string-吗\",\"link\":\"#我们能在-switch-中使用-string-吗\",\"children\":[]},{\"level\":3,\"title\":\"Java 中的构造器链是什么?\",\"slug\":\"java-中的构造器链是什么\",\"link\":\"#java-中的构造器链是什么\",\"children\":[]},{\"level\":3,\"title\":\"枚举类\",\"slug\":\"枚举类\",\"link\":\"#枚举类\",\"children\":[]},{\"level\":3,\"title\":\"什么是不可变对象(immutable object)? Java 中怎么创建一个不可变对象?\",\"slug\":\"什么是不可变对象-immutable-object-java-中怎么创建一个不可变对象\",\"link\":\"#什么是不可变对象-immutable-object-java-中怎么创建一个不可变对象\",\"children\":[]},{\"level\":3,\"title\":\"我们能创建一个包含可变对象的不可变对象吗?\",\"slug\":\"我们能创建一个包含可变对象的不可变对象吗\",\"link\":\"#我们能创建一个包含可变对象的不可变对象吗\",\"children\":[]},{\"level\":3,\"title\":\"有没有可能两个不相等的对象有相同的 hashcode?\",\"slug\":\"有没有可能两个不相等的对象有相同的-hashcode\",\"link\":\"#有没有可能两个不相等的对象有相同的-hashcode\",\"children\":[]},{\"level\":3,\"title\":\"两个相同的对象会有不同的 hash code 吗?\",\"slug\":\"两个相同的对象会有不同的-hash-code-吗\",\"link\":\"#两个相同的对象会有不同的-hash-code-吗\",\"children\":[]},{\"level\":3,\"title\":\"我们可以在 hashcode() 中使用随机数字吗?\",\"slug\":\"我们可以在-hashcode-中使用随机数字吗\",\"link\":\"#我们可以在-hashcode-中使用随机数字吗\",\"children\":[]},{\"level\":3,\"title\":\"Java 中，Comparator 与 Comparable 有什么不同?\",\"slug\":\"java-中-comparator-与-comparable-有什么不同\",\"link\":\"#java-中-comparator-与-comparable-有什么不同\",\"children\":[]},{\"level\":3,\"title\":\"为什么在重写 equals 方法的时候需要重写 hashCode 方法?\",\"slug\":\"为什么在重写-equals-方法的时候需要重写-hashcode-方法\",\"link\":\"#为什么在重写-equals-方法的时候需要重写-hashcode-方法\",\"children\":[]},{\"level\":3,\"title\":\"“a==b”和”a.equals(b)”有什么区别?\",\"slug\":\"a-b-和-a-equals-b-有什么区别\",\"link\":\"#a-b-和-a-equals-b-有什么区别\",\"children\":[]},{\"level\":3,\"title\":\"a.hashCode() 有什么用? 与 a.equals(b) 有什么关系?\",\"slug\":\"a-hashcode-有什么用-与-a-equals-b-有什么关系\",\"link\":\"#a-hashcode-有什么用-与-a-equals-b-有什么关系\",\"children\":[]},{\"level\":3,\"title\":\"final、finalize 和 finally 的不同之处?\",\"slug\":\"final、finalize-和-finally-的不同之处\",\"link\":\"#final、finalize-和-finally-的不同之处\",\"children\":[]},{\"level\":3,\"title\":\"Java 中的编译期常量是什么? 使用它又什么风险?\",\"slug\":\"java-中的编译期常量是什么-使用它又什么风险\",\"link\":\"#java-中的编译期常量是什么-使用它又什么风险\",\"children\":[]},{\"level\":3,\"title\":\"静态内部类与顶级类有什么区别?\",\"slug\":\"静态内部类与顶级类有什么区别\",\"link\":\"#静态内部类与顶级类有什么区别\",\"children\":[]},{\"level\":3,\"title\":\"Java 中，Serializable 与 Externalizable 的区别?\",\"slug\":\"java-中-serializable-与-externalizable-的区别\",\"link\":\"#java-中-serializable-与-externalizable-的区别\",\"children\":[]},{\"level\":3,\"title\":\"说出 JDK 1.7 中的三个新特性?\",\"slug\":\"说出-jdk-1-7-中的三个新特性\",\"link\":\"#说出-jdk-1-7-中的三个新特性\",\"children\":[]},{\"level\":3,\"title\":\"说出 5 个 JDK 1.8 引入的新特性?\",\"slug\":\"说出-5-个-jdk-1-8-引入的新特性\",\"link\":\"#说出-5-个-jdk-1-8-引入的新特性\",\"children\":[]},{\"level\":3,\"title\":\"接口是什么? 为什么要使用接口而不是直接使用具体类?\",\"slug\":\"接口是什么-为什么要使用接口而不是直接使用具体类\",\"link\":\"#接口是什么-为什么要使用接口而不是直接使用具体类\",\"children\":[]},{\"level\":3,\"title\":\"Java 中，抽象类与接口之间有什么不同?\",\"slug\":\"java-中-抽象类与接口之间有什么不同\",\"link\":\"#java-中-抽象类与接口之间有什么不同\",\"children\":[]},{\"level\":3,\"title\":\"Object有哪些公用方法?\",\"slug\":\"object有哪些公用方法\",\"link\":\"#object有哪些公用方法\",\"children\":[]},{\"level\":3,\"title\":\"equals与==的区别\",\"slug\":\"equals与-的区别\",\"link\":\"#equals与-的区别\",\"children\":[]},{\"level\":3,\"title\":\"String、StringBuffer与StringBuilder的区别\",\"slug\":\"string、stringbuffer与stringbuilder的区别\",\"link\":\"#string、stringbuffer与stringbuilder的区别\",\"children\":[]},{\"level\":3,\"title\":\"switch能否用String做参数\",\"slug\":\"switch能否用string做参数\",\"link\":\"#switch能否用string做参数\",\"children\":[]},{\"level\":3,\"title\":\"接口与抽象类\",\"slug\":\"接口与抽象类\",\"link\":\"#接口与抽象类\",\"children\":[]},{\"level\":3,\"title\":\"抽象类和最终类\",\"slug\":\"抽象类和最终类\",\"link\":\"#抽象类和最终类\",\"children\":[]},{\"level\":3,\"title\":\"异常\",\"slug\":\"异常\",\"link\":\"#异常\",\"children\":[]},{\"level\":3,\"title\":\"关于finally\",\"slug\":\"关于finally\",\"link\":\"#关于finally\",\"children\":[]},{\"level\":3,\"title\":\"受检查异常和运行时异常\",\"slug\":\"受检查异常和运行时异常\",\"link\":\"#受检查异常和运行时异常\",\"children\":[]},{\"level\":3,\"title\":\"super出现在父类的子类中。有三种存在方式\",\"slug\":\"super出现在父类的子类中。有三种存在方式\",\"link\":\"#super出现在父类的子类中。有三种存在方式\",\"children\":[]},{\"level\":3,\"title\":\"this() & super()在构造方法中的区别\",\"slug\":\"this-super-在构造方法中的区别\",\"link\":\"#this-super-在构造方法中的区别\",\"children\":[]},{\"level\":3,\"title\":\"构造内部类和静态内部类对象\",\"slug\":\"构造内部类和静态内部类对象\",\"link\":\"#构造内部类和静态内部类对象\",\"children\":[]},{\"level\":3,\"title\":\"序列化\",\"slug\":\"序列化\",\"link\":\"#序列化\",\"children\":[]},{\"level\":3,\"title\":\"Java移位运算符\",\"slug\":\"java移位运算符\",\"link\":\"#java移位运算符\",\"children\":[]},{\"level\":3,\"title\":\"形参&实参\",\"slug\":\"形参-实参\",\"link\":\"#形参-实参\",\"children\":[]},{\"level\":3,\"title\":\"局部变量为什么要初始化\",\"slug\":\"局部变量为什么要初始化\",\"link\":\"#局部变量为什么要初始化\",\"children\":[]},{\"level\":3,\"title\":\"Java语言的鲁棒性\",\"slug\":\"java语言的鲁棒性\",\"link\":\"#java语言的鲁棒性\",\"children\":[]}]}],\"readingTime\":{\"minutes\":18.39,\"words\":5516},\"filePathRelative\":\"java/basic/lan-sum.md\",\"excerpt\":\"<h1> 图谱 &amp; Q/A</h1>\\n<blockquote>\\n<p>本文主要对Java基础知识体系小结，同时结合一些Q&amp;A进行理解。 @pdai</p>\\n</blockquote>\\n<h2> 参考文档</h2>\\n<ul>\\n<li>Thinking in Java (Java 编程思想) Gitbook中文文档 <a href=\\\"https://java.quanke.name/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://java.quanke.name/</a></li>\\n<li>Thinking in Java (Java 编程思想) Github <a href=\\\"https://github.com/quanke/think-in-java\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://github.com/quanke/think-in-java</a></li>\\n<li>Thinking in Java (Java 编程思想) Gitbook2 <a href=\\\"https://www.gitbook.com/book/wizardforcel/thinking-in-java/details\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://www.gitbook.com/book/wizardforcel/thinking-in-java/details</a></li>\\n</ul>\",\"copyright\":{\"author\":\"gavin-james\",\"license\":\"https://github.com/gavin-james/gavin-james.github.io/LICENSE\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
