export const data = JSON.parse("{\"key\":\"v-1df8bd14\",\"path\":\"/design-pattern/proxy/\",\"title\":\"设计模式 - 结构型代理模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"设计模式 - 结构型代理模式\",\"date\":\"2022-03-16T19:19:27.000Z\",\"permalink\":\"/design-pattern/proxy/\",\"categories\":[\"设计模式\"],\"tags\":[\"设计模式\"],\"author\":{\"name\":\"Gavin\",\"link\":\"https://github.com/Small-market\"},\"summary\":\"[[TOC]] 代理模式的基本介绍 在有些情况下，一个客户不能或者不想直接访问另一个对象，这时需要找一个中介帮忙完成某项任务，这个中介就是代理对象。例如，购买火车票不一定要去火车站买，可以通过 12306 网站或者去火车票代售点买。又如找女朋友、找保姆、找工作等都可以通过找中介完成。 在软件设计中，使用代理模式的例子也很多，例如，要访问的远程对象比较大（如视\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://www.gavin-james.com/design-pattern/proxy/\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Gavin blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"设计模式 - 结构型代理模式\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:locale:alternate\",\"content\":\"en-US\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Gavin\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"设计模式\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-03-16T19:19:27.000Z\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"代理模式的基本介绍\",\"slug\":\"代理模式的基本介绍\",\"children\":[]},{\"level\":2,\"title\":\"静态代理\",\"slug\":\"静态代理\",\"children\":[{\"level\":3,\"title\":\"静态代理基本介绍\",\"slug\":\"静态代理基本介绍\",\"children\":[]},{\"level\":3,\"title\":\"静态代理应用实例\",\"slug\":\"静态代理应用实例\",\"children\":[]},{\"level\":3,\"title\":\"静态代理优缺点\",\"slug\":\"静态代理优缺点\",\"children\":[]}]},{\"level\":2,\"title\":\"动态代理\",\"slug\":\"动态代理\",\"children\":[{\"level\":3,\"title\":\"动态代理基本介绍\",\"slug\":\"动态代理基本介绍\",\"children\":[]},{\"level\":3,\"title\":\"JDK 中生成代理对象的 API\",\"slug\":\"jdk-中生成代理对象的-api\",\"children\":[]},{\"level\":3,\"title\":\"动态代理应用实例\",\"slug\":\"动态代理应用实例\",\"children\":[]}]},{\"level\":2,\"title\":\"Cglib 代理\",\"slug\":\"cglib-代理\",\"children\":[{\"level\":3,\"title\":\"Cglib 代理基本介绍\",\"slug\":\"cglib-代理基本介绍\",\"children\":[]},{\"level\":3,\"title\":\"Cglib 代理模式应用实例\",\"slug\":\"cglib-代理模式应用实例\",\"children\":[]}]},{\"level\":2,\"title\":\"几种常见的代理模式介绍\",\"slug\":\"几种常见的代理模式介绍\",\"children\":[]},{\"level\":2,\"title\":\"代理模式的应用场景\",\"slug\":\"代理模式的应用场景\",\"children\":[]}],\"readingTime\":{\"minutes\":12.07,\"words\":3621},\"copyright\":\"著作权归Gavin所有\\n基于https://github.com/Small-market/Small-market.github.io/LICENSE协议\\n原文链接：http://www.gavin-james.com/design-pattern/proxy/\",\"filePathRelative\":\"develop/design/29.设计模式 - 结构型代理模式.md\",\"localizedDate\":\"2022年3月17日\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
